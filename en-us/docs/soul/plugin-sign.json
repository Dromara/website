{
  "filename": "plugin-sign.md",
  "__html": "<h2>Explanation</h2>\n<ul>\n<li>Sign is a native plugin of soul Gateway and is used to process signature authentication of requests.</li>\n</ul>\n<h2>Plugin Setting</h2>\n<ul>\n<li>In <code>soul-admin</code> -&gt; plugin management --&gt; <code>sign</code> set to enable.</li>\n</ul>\n<h2>Plugin Usage</h2>\n<ul>\n<li>Introducing <code>sign</code> dependency in the pom.xml file of the gateway</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!-- soul sign plugin start--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-sign<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- soul sign plugin end--&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>Selectors and rules, please refer to: <a href=\"docs/en-us/soul/selector.md\">selector</a>。</p>\n<ul>\n<li>Only those matched requests can be authenticated by signature.</li>\n</ul>\n</li>\n</ul>\n<h2>Add AK/SK</h2>\n<ul>\n<li>In soul-admin --&gt; In authentication management, click <code>Add</code> to add a new AK/SK。</li>\n</ul>\n<h2>Implementation of Gateway Technology</h2>\n<ul>\n<li>Adopt Ak/SK authentication technical scheme.</li>\n<li>Adopt authentication plug-in and Chain of Responsibility Pattern to realize.</li>\n<li>Take effect when the authentication plugin is enabled and all interfaces are configured for authentication.</li>\n</ul>\n<h2>Authentication Guide</h2>\n<ul>\n<li>\n<p>Step 1: AK/SK is assigned by the gateway. For example, the AK assigned to you is: <code>1test123456781</code> SK is: ` 506eeb535cf740d7a755cb49f4a1536'</p>\n</li>\n<li>\n<p>Step 2: Decide the gateway path you want to access, such as ` /api/service/abc'</p>\n</li>\n<li>\n<p>Step 3: Construct parameters (the following are general parameters)</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>timestamp</td>\n<td style=\"text-align:right\">current timestamp(String)</td>\n<td style=\"text-align:center\">The number of milliseconds of the current time（gateway will filter requests the before 5 minutes）</td>\n</tr>\n<tr>\n<td>path</td>\n<td style=\"text-align:right\">/api/service/abc</td>\n<td style=\"text-align:center\">The path that you want to request(Modify by yourself according to your configuration of gateway)</td>\n</tr>\n<tr>\n<td>version</td>\n<td style=\"text-align:right\">1.0.0</td>\n<td style=\"text-align:center\"><code>1.0.0</code> is a fixed value ，String</td>\n</tr>\n</tbody>\n</table>\n<p>Sort the above two field natually according to the key, then splice fields and fields, finally splice SK. The following is a code example.</p>\n<p>Step 1: First, construct a Map.</p>\n<pre><code class=\"language-java\">\n   Map&lt;String, String&gt; map = Maps.newHashMapWithExpectedSize(<span class=\"hljs-number\">2</span>);\n   <span class=\"hljs-comment\">//timestamp is string format of millisecond. String.valueOf(LocalDateTime.now().toInstant(ZoneOffset.of(\"+8\")).toEpochMilli()) </span>\n   map.put(<span class=\"hljs-string\">\"timestamp\"</span>,<span class=\"hljs-string\">\"1571711067186\"</span>);  <span class=\"hljs-comment\">// Value should be string format of milliseconds</span>\n   map.put(<span class=\"hljs-string\">\"path\"</span>, <span class=\"hljs-string\">\"/api/service/abc\"</span>);\n   map.put(<span class=\"hljs-string\">\"version\"</span>, <span class=\"hljs-string\">\"1.0.0\"</span>);\n</code></pre>\n<p>Step 2: Sort the Keys naturally, then splice the key and values, and finally splice the SK assigned to you.</p>\n<pre><code class=\"language-java\">List&lt;String&gt; storedKeys = Arrays.stream(map.keySet()\n                .toArray(<span class=\"hljs-keyword\">new</span> String[]{}))\n                .sorted(Comparator.naturalOrder())\n                .collect(Collectors.toList());\n<span class=\"hljs-keyword\">final</span> String sign = storedKeys.stream()\n                .map(key -&gt; String.join(<span class=\"hljs-string\">\"\"</span>, key, params.get(key)))\n                .collect(Collectors.joining()).trim()\n                .concat(<span class=\"hljs-string\">\"506EEB535CF740D7A755CB4B9F4A1536\"</span>);\n</code></pre>\n<ul>\n<li>The returned sign value should be:path/api/service/abctimestamp1571711067186version1.0.0506EEB535CF740D7A755CB4B9F4A1536</li>\n</ul>\n<p>Step 3: Md5 encryption and then capitalization.</p>\n<pre><code class=\"language-java\">DigestUtils.md5DigestAsHex(sign.getBytes()).toUpperCase()\n</code></pre>\n<ul>\n<li>The final returned value is:A021BF82BE342668B78CD9ADE593D683</li>\n</ul>\n<h2>Request GateWay</h2>\n<ul>\n<li>\n<p>If your visited path is:/api/service/abc。</p>\n</li>\n<li>\n<p>Address: http: domain name of gateway /api/service/abc.</p>\n</li>\n<li>\n<p>Set <code>header</code>，<code>header</code> Parameter：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>timestamp</td>\n<td style=\"text-align:right\"><code>1571711067186</code></td>\n<td style=\"text-align:center\">Timestamp when signing</td>\n</tr>\n<tr>\n<td>appKey</td>\n<td style=\"text-align:right\"><code>1TEST123456781</code></td>\n<td style=\"text-align:center\">The AK value assigned to you</td>\n</tr>\n<tr>\n<td>sign</td>\n<td style=\"text-align:right\"><code>A90E66763793BDBC817CF3B52AAAC041</code></td>\n<td style=\"text-align:center\">The signature obtained above</td>\n</tr>\n<tr>\n<td>version</td>\n<td style=\"text-align:right\"><code>1.0.0</code></td>\n<td style=\"text-align:center\"><code>1.0.0</code> is a fixed value.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>The signature plugin will filter requests after 5 minutes by default</li>\n</ul>\n<h2>If the authentication fails, will return code 401, message may change.</h2>\n<pre><code class=\"language-json\">\"code\":401,\"message\":\"sign is not pass,Please check you sign algorithm!\",\"data\":null}\n</code></pre>\n<h2>Extension of Signature Authentication Algorithm</h2>\n<ul>\n<li>Please refer to: <a href=\"docs/en-us/soul/dev-sign.md\">dev-sign</a>.</li>\n</ul>\n",
  "link": "\\en-us\\docs\\soul\\plugin-sign.html",
  "meta": {
    "title": "plugin-sign",
    "keywords": "sign",
    "description": "sign plugin"
  }
}
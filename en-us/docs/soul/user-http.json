{
  "filename": "user-http.md",
  "__html": "<h2>Features</h2>\n<ul>\n<li>\n<p>This chapter is a guide about integrating Http service with soul gateway.</p>\n</li>\n<li>\n<p>soul gateway uses divide plugin handling http request, pls enable it in soul-admin backgroud.</p>\n</li>\n<li>\n<p>Pls start <code>soul-admin</code> successfully beofore integrating , and <a href=\"setup.md\">Environement Setup</a> is Ok.</p>\n</li>\n</ul>\n<h2>Configure soul gateway as Http proxy.</h2>\n<ul>\n<li>Add these dependencies in gateway's <code>pom.xml</code>：</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!--if you use http proxy start this--&gt;</span>\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-divide<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-httpclient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>pls restart the gateway.</li>\n</ul>\n<h2>Http request via soul gateway（springMVC user）</h2>\n<ul>\n<li>pls make sure divide plugin has enabled in <code>soul-admin</code> background.</li>\n</ul>\n<h5>add Soul-Client methods（available for SpringMVC,SpringBoot user）</h5>\n<ul>\n<li>\n<p>SpringBoot user</p>\n<ul>\n<li>Add these dependencies in your local maven repository <code>pom.xml</code>:</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-client-springmvc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>Add these config values in your yaml file ：</li>\n</ul>\n<pre><code class=\"language-yaml\">   <span class=\"hljs-attr\">soul:</span>\n     <span class=\"hljs-attr\">http:</span>\n       <span class=\"hljs-attr\">adminUrl:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n       <span class=\"hljs-attr\">port:</span> <span class=\"hljs-string\">the</span> <span class=\"hljs-string\">port</span> <span class=\"hljs-string\">exposed</span> <span class=\"hljs-string\">by</span> <span class=\"hljs-string\">your</span> <span class=\"hljs-string\">application</span> <span class=\"hljs-string\">server</span>\n       <span class=\"hljs-attr\">contextPath:</span> <span class=\"hljs-string\">/http</span>\n       <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">http</span>\n       <span class=\"hljs-attr\">full:</span> <span class=\"hljs-literal\">false</span>  \n   <span class=\"hljs-comment\"># adminUrl: 'ip + port' of your soul-admin project, pls note 'http://' is necessary.</span>\n   <span class=\"hljs-comment\"># port: your project port number</span>\n   <span class=\"hljs-comment\"># contextPath: your project's route prefix through soul gateway, such as /order ，/product etc，gateway will route based on it.</span>\n   <span class=\"hljs-comment\"># appName：your project name,the default value is`spring.application.name`.</span>\n   <span class=\"hljs-comment\"># full: set true means providing proxy for your entire service, or only a few controller.</span>\n</code></pre>\n<ul>\n<li>SpringMVC user\n<ul>\n<li>Add these dependencies in your local maven repository <code>pom.xml</code>:</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-client-springmvc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>Inject these properties into your Spring beans XML file:</li>\n</ul>\n<pre><code class=\"language-xml\">   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span> =<span class=\"hljs-string\">\"springMvcClientBeanPostProcessor\"</span> <span class=\"hljs-attr\">class</span> =<span class=\"hljs-string\">\"org.dromara.soul.client.springmvc.init.SpringMvcClientBeanPostProcessor\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">constructor-arg</span>  <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"soulSpringMvcConfig\"</span>/&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n   \n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"soulSpringMvcConfig\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.dromara.soul.client.springmvc.config.SoulSpringMvcConfig\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"adminUrl\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"http://localhost:9095\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"port\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"your port\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"contextPath\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"/your contextPath\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"appName\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"your application name\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"full\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"false\"</span>/&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>Add this annotation <code>@SoulSpringMvcClient</code> in your <code>controller</code> interface.</p>\n<ul>\n<li>\n<p>you can apply the annotation to class-level in a controller.the name of the path variable is prefix and '/**' will apply proxy for entire interfaces.</p>\n</li>\n<li>\n<p>example: （1）：both <code>/test/payment</code> and <code>/test/findByUserId</code> will be handled by proxy service.</p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/test\"</span>)\n <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/test/**\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HttpTestController</span> </span>{\n     \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/payment\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">post</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> UserDTO userDTO)</span> </span>{\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }\n  \n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findByUserId\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">findByUserId</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"userId\"</span>)</span> <span class=\"hljs-keyword\">final</span> String userId) </span>{\n         UserDTO userDTO = <span class=\"hljs-keyword\">new</span> UserDTO();\n         userDTO.setUserId(userId);\n         userDTO.setUserName(<span class=\"hljs-string\">\"hello world\"</span>);\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }      \n  }\n</code></pre>\n<ul>\n<li>example （2）：<code>/order/save</code> will be handled by proxy service, but <code>/order/findById</code> won't.</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">OrderController</span> </span>{\n \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> OrderDTO orderDTO)</span> </span>{\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world save order\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n\n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findById\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">findById</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"id\"</span>)</span> <span class=\"hljs-keyword\">final</span> String id) </span>{\n         OrderDTO orderDTO = <span class=\"hljs-keyword\">new</span> OrderDTO();\n         orderDTO.setId(id);\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world findById\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n }\n</code></pre>\n<ul>\n<li>Kick off your project with your interface, which is  integrated with soul gateway.</li>\n</ul>\n<h2>Configure soul gateway as an Http proxy（other framework）</h2>\n<ul>\n<li>\n<p>first of all, enable the divide plugin in <code>soul-admin</code>, then add selector and rule which will filter the request.</p>\n</li>\n<li>\n<p>if you don't know how to configure, pls refer to <a href=\"selector.md\">selector guide</a>.</p>\n</li>\n<li>\n<p>you can also develop your cutomized http-client，refer to <a href=\"dev-client.md\">multi-language Http client development</a>。</p>\n</li>\n</ul>\n<h2>User request</h2>\n<ul>\n<li>\n<p>Send the request as before, only two points need to notice.</p>\n</li>\n<li>\n<p>firstly，the domain name that requested before in your service, now need to replace with gateway's domain name.</p>\n</li>\n<li>\n<p>secondly，soul gateway needs a route prefix which comes from <code>contextPath</code>, it configured during the integration with gateway, you can change it freely in divide plugin of <code>soul-admin</code>, if your familiar with it.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\">\n<span class=\"hljs-comment\"># for example, if you have an order service and it has a interface, the request url: http://localhost:8080/test/save</span>\n\n<span class=\"hljs-comment\"># Now need to change to:  http://localhost:9195/order/test/save</span>\n\n<span class=\"hljs-comment\"># We can see localhost:9195 is your gateway's ip port，default port number is 9195 ，/order is your contextPath which you configured with gateway.</span>\n\n<span class=\"hljs-comment\"># other parameters doesn't change in request method.</span>\n\n<span class=\"hljs-comment\"># Any questions, pls join the group and we can talk about it.</span>\n\n</code></pre>\n<ul>\n<li>then you can visit, very easy and simple.</li>\n</ul>\n",
  "link": "/en-us/docs/soul/user-http.html",
  "meta": {
    "title": "Integrate Http with soul gateway",
    "keywords": "soul",
    "description": "Integrate Http with soul gateway"
  }
}
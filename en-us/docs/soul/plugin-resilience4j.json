{
  "filename": "plugin-resilience4j.md",
  "__html": "<h2>Explanation</h2>\n<ul>\n<li>\n<p>resilience4j is one of the options that supports flow control and circuit breaking.</p>\n</li>\n<li>\n<p>resilience4j supports flow control and circuit breaking functions for gateway.</p>\n</li>\n</ul>\n<h2>Plugin Setting</h2>\n<ul>\n<li>\n<p>In <code>soul-admin</code> --&gt;  plugin management --&gt; <code>resilience4j</code> set to enable.</p>\n</li>\n<li>\n<p>If you don't want to use it, please close the plugin in <code>soul-admin</code>.</p>\n</li>\n</ul>\n<h2>Plugin Usage</h2>\n<ul>\n<li>Introducing the follow supports to the pom.xml file of soul project.</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!-- soul resilience4j plugin start--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-resilience4j<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- soul resilience4j plugin end--&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>Selectors and rules, please refer to: <a href=\"selector.md\">selector</a></p>\n</li>\n<li>\n<p>Resilience4j Processing Details</p>\n<ul>\n<li>\n<p>timeoutDurationRate ：Configures wait time(ms) a thread waits for a permission,default value:5000。</p>\n</li>\n<li>\n<p>limitRefreshPeriod ：Configures the period of a limit refresh. After each period the rate limiter sets its permissions count back to the limitForPeriod value,default value:500。</p>\n</li>\n<li>\n<p>limitForPeriod ：Configures the number of permissions available during one limit refresh period,default value:50。</p>\n</li>\n<li>\n<p>circuitEnable ：Configures circuitBreaker enable,0:OFF,1:ON ,default value:0。</p>\n</li>\n<li>\n<p>timeoutDuration ：Configures request CircuitBreaker timeout(ms),default value:30000。</p>\n</li>\n<li>\n<p>fallbackUri ：Configures the fall back uri。</p>\n</li>\n<li>\n<p>slidingWindowSize ：Configures the size of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed,default value:100。</p>\n</li>\n<li>\n<p>slidingWindowType ：Configures the type of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed,\nSliding window can either be 0:count-based or 1:time-based.,default value:0。</p>\n</li>\n<li>\n<p>minimumNumberOfCalls ：Configures the minimum number of calls which are required (per sliding window period) before the CircuitBreaker can calculate the error rate or slow call rate,default value:100。</p>\n</li>\n<li>\n<p>waitIntervalFunctionInOpenState ：Configures the circuitBreaker time(ms) of duration,default value:10。</p>\n</li>\n<li>\n<p>permittedNumberOfCallsInHalfOpenState ：Configures the number of permitted calls when the CircuitBreaker is half open,default value:10。</p>\n</li>\n<li>\n<p>failureRateThreshold ：Configures the failure rate threshold in percentage,When the failure rate is equal or greater than the threshold the CircuitBreaker transitions to open and starts short-circuiting calls,default value:50。</p>\n</li>\n<li>\n<p>automaticTransitionFromOpenToHalfOpenEnabled ：Configures automatically transition from open state to half open state,true:ON,false:OFF,default value:false。</p>\n</li>\n</ul>\n</li>\n</ul>\n",
  "link": "/en-us/docs/soul/plugin-resilience4j.html",
  "meta": {
    "title": "plugin-resilience4j",
    "keywords": "soul",
    "description": "resilience4j plugin"
  }
}
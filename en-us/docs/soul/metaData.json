{
  "filename": "metaData.md",
  "__html": "<h2>Description</h2>\n<ul>\n<li>This article mainly explains the concept,design of metadata and how to connect in the soul gateway.</li>\n</ul>\n<h2>Technical solutions</h2>\n<ul>\n<li>\n<p>Add a new table in the database,and data can synchronize to the JVM memory of gateway according to the data synchronization scheme.</p>\n</li>\n<li>\n<p>Table Structure:</p>\n</li>\n</ul>\n<pre><code>CREATE TABLE  IF NOT EXISTS `meta_data` (\n  `id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'id',\n  `app_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'application name',\n  `path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'path,not repeatable',\n  `path_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'path description',\n  `rpc_type` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'rpc type\n  `service_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'service name',\n  `method_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'method name',\n  `parameter_types` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'multiple parameter types, split by comma',\n  `rpc_ext` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'rpc extension information,json format',\n  `date_created` datetime(0) NOT NULL COMMENT 'create date',\n  `date_updated` datetime(0) NOT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT 'update date',\n  `enabled` tinyint(4) NOT NULL DEFAULT 0 COMMENT 'enable status',\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;\n\n</code></pre>\n<ul>\n<li>\n<p>Metadata design as below,the most important is using it in dubbo's generalization call.</p>\n</li>\n<li>\n<p>pay attention to the field <code>path</code>,we will match specific data according to your field path during requesting gateway,and then carry out the follow-up process.</p>\n</li>\n<li>\n<p>pay attention to the field <code>rpc_ext</code>,if it is a dubbo service interface and service interface has group and version field,this field exists.</p>\n<ul>\n<li>dubbo field structure as below,then we store json format string..</li>\n</ul>\n<pre><code> public static class RpcExt {\n        \n        private String group;\n        \n        private String version;\n        \n        private String loadbalance;\n        \n        private Integer retries;\n        \n        private Integer timeout;\n\n    }\n</code></pre>\n</li>\n</ul>\n<h2>MetaData Storage</h2>\n<ul>\n<li>\n<p>a dubbo interface corresponds to a meta data.</p>\n</li>\n<li>\n<p>spring cloud protocol,only store one record, path: <code>/contextPath/**</code>.</p>\n</li>\n<li>\n<p>http service,no data.</p>\n</li>\n</ul>\n",
  "link": "\\en-us\\docs\\soul\\metaData.html",
  "meta": {
    "title": "MetaData Concept Design",
    "keywords": "soul",
    "description": "MetaData Concept Design"
  }
}
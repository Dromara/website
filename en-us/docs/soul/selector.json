{
  "filename": "selector.md",
  "__html": "<h2>Features</h2>\n<ul>\n<li>\n<p>selector and rule are the key point of soul gateway, you can manage any request with it.</p>\n</li>\n<li>\n<p>this chapter is mainly focus on the concepts of selector and rule and how to use it.</p>\n</li>\n</ul>\n<h2>overview</h2>\n<ul>\n<li>\n<p>one plugin has many selector and a selector has many rules, selector is the first filter of request, and the rule is the final filter.</p>\n</li>\n<li>\n<p>pls consider this, it would be perfect when the plugin executes the request until it reached the config value.</p>\n</li>\n<li>\n<p>selector and rule are designed to execute only when the request meet the specific condition.</p>\n</li>\n<li>\n<p>pls refer to the previous data structure <a href=\"db.md\">database design</a>.</p>\n</li>\n</ul>\n<h2>selector</h2>\n<p><img src=\"https://yu199195.github.io/images/soul/selector.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>selector detailed explanation：</p>\n<ul>\n<li>name：create your selector with a distinguish name.</li>\n<li>type：custom flow is customized request, full flow is full request. customized request will be handled by the conditions as below, while  full request won't.</li>\n<li>match method: you can combine these conditions with 'and' , 'or' operators.</li>\n<li>condition：\n<ul>\n<li>uri: filter request with uri method and support fuzzy matching (/**).</li>\n<li>header: filter request with request header.</li>\n<li>query: filter request with query string.</li>\n<li>ip: filter request with your real ip.</li>\n<li>host: filter request with your real host.</li>\n<li>post: not recommend to use.</li>\n<li>condition match:\n<ul>\n<li>match : fuzzy string matching，recommend to combine with uri，support restful matching.（/test/**).</li>\n<li>= : if the values are the same, then they match.</li>\n<li>regEx : regex matching，match characters in regex expression.</li>\n<li>like : string fuzzy matching.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>open option：only work with enabled.</li>\n<li>print log：it will print the matching log with the open option enabled.</li>\n<li>execution order：the smaller will have high priorty to execute among multi-selectors.</li>\n</ul>\n</li>\n<li>\n<p>the above picture means: when the prefix of the request uri is <code>/test</code> and the value of <code>module</code> in<code>header</code> is<code>test</code>, it will redirect to this service <code>1.1.1.1:8080</code>.</p>\n</li>\n<li>\n<p>selector advice : combine <code>uri</code> conditon and <code>match</code> prefix（/contextPath）as the first request filter.</p>\n</li>\n</ul>\n<h2>rule</h2>\n<p><img src=\"https://yu199195.github.io/images/soul/rule.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>when the request was passed by the seletor, then it will be processed by the rule, the final filter.</p>\n</li>\n<li>\n<p>rule is the final confirmation about how to execute request logically.</p>\n</li>\n<li>\n<p>rule detailed explanation：</p>\n<ul>\n<li>name：create your selector with a distinguish name.</li>\n<li>match method: you can combine these conditions with 'and' , 'or' operators.</li>\n<li>condition：\n<ul>\n<li>uri: filter request with uri method and support fuzzy matching (/**).</li>\n<li>header: filter request with request header.</li>\n<li>query: filter request with query string.</li>\n<li>ip: filter request with your real ip.</li>\n<li>host: filter request with your real host.</li>\n<li>post: not recommend to use.</li>\n<li>condition match:\n<ul>\n<li>match : fuzzy string matching，recommend to combine with uri，support restful matching.（/test/**）</li>\n<li>= : if the values are the same, then they match.</li>\n<li>regEx : regex matching，match characters in regex expression.</li>\n<li>like : string fuzzy matching.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>open option：only work with enabled.</li>\n<li>print log：it will print the matching log with the open option enabled.</li>\n<li>execution order：the smaller will have high priorty to execute amongmulti-selectors.</li>\n<li>handle: different plugin has different execution method, pls refer to the specific one.</li>\n</ul>\n</li>\n<li>\n<p>above picture means: when the request <code>uri</code> equals to <code>/http/order/save</code>, it will execute based on this rule，load strategy is <code>random</code>.</p>\n</li>\n<li>\n<p>combine selector means ：when the request <code>uri</code> is <code>/http/order/save</code>, it will be redicted to <code>1.1.1.1:8080</code> by <code>random</code> method.</p>\n</li>\n<li>\n<p>rule advice: combine <code>uri</code> condition with <code>match</code> the real <code>uri path</code> condition as the final filter.</p>\n</li>\n</ul>\n<h2>condition detailed explanation</h2>\n<ul>\n<li>\n<p>uri matching （recommend）</p>\n<ul>\n<li>\n<p>uri matching is based on your request uri, the frontend won't change anything before accessing the gateway.</p>\n</li>\n<li>\n<p>the <code>match</code> filter method is the same with<code>springmvc</code> fuzzy matching.</p>\n</li>\n<li>\n<p>in selector，we recommend to match with the prefix of uri, and use the specific path in rule.</p>\n</li>\n<li>\n<p>when changing the match method, the matching field name can be filled randomly, but make sure the match value must be correct.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>header matching</p>\n<ul>\n<li>header matches with your <code>http</code> request header value.</li>\n</ul>\n</li>\n<li>\n<p>query matching</p>\n<ul>\n<li>\n<p>it matches the query string in your uri, such as: /test?a=1&amp;&amp;b=2.</p>\n</li>\n<li>\n<p>so you can add a new condition, choose query method: a   =  1.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>ip matching</p>\n<ul>\n<li>\n<p>it matches the ip of the http caller.</p>\n</li>\n<li>\n<p>especially in the waf plugin, if you find some ip is unsafe, you can add a match condition with this ip, then it can't access any more.</p>\n</li>\n<li>\n<p>if you use nginx proxy before soul, you can get the right ip with refering to <a href=\"dev-iphost.md\">dev-iphost</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>host matching</p>\n<ul>\n<li>\n<p>it matches the host of http caller.</p>\n</li>\n<li>\n<p>especially in waf plugin, if you find some host is unsafe, you can add a match condition with this host, then it can't access any more.</p>\n</li>\n<li>\n<p>if you use nginx proxy before soul, you can get the right ip with refering to <a href=\"dev-iphost.md\">dev-iphost</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>post matching</p>\n<ul>\n<li>not recommend to use.</li>\n</ul>\n</li>\n</ul>\n",
  "link": "\\en-us\\docs\\soul\\selector.html",
  "meta": {
    "title": "selector detailed explanation",
    "keywords": "soul",
    "description": "detailed explanation of selector and rule"
  }
}
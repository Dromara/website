{
  "filename": "user-springcloud.md",
  "__html": "<h2>Features</h2>\n<ul>\n<li>\n<p>this article is a guide about how to integrate Spring Cloud with soul gateway quickly.</p>\n</li>\n<li>\n<p>pls enable <code>springCloud</code> plug-in in soul-admin background.</p>\n</li>\n<li>\n<p>Pls start <code>soul-admin</code> successfully beofore integrating , and <a href=\"setup.md\">Environement Setup</a> is Ok.</p>\n</li>\n</ul>\n<h2>Configure soul gateway as Spring Cloud proxy</h2>\n<ul>\n<li>add these dependencies in gateway's pom.xml:</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!--soul springCloud plugin start--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-springcloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n   <span class=\"hljs-comment\">&lt;!--soul springCloud plugin end--&gt;</span>\n\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span> \n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>If you use <code>eureka</code> as SpringCloud registry center.</p>\n<ul>\n<li>add these dependencies:</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>add these config values in gateway's yaml file:</li>\n</ul>\n<pre><code class=\"language-yaml\">   <span class=\"hljs-attr\">eureka:</span>\n     <span class=\"hljs-attr\">client:</span>\n       <span class=\"hljs-attr\">serviceUrl:</span>\n         <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://localhost:8761/eureka/</span> <span class=\"hljs-comment\">#your eureka address</span>\n     <span class=\"hljs-attr\">instance:</span>\n       <span class=\"hljs-attr\">prefer-ip-address:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<ul>\n<li>\n<p>if you use <code>nacos</code> as Spring Cloud registry center.</p>\n<ul>\n<li>add these dependencies:</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.1.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>add these config values in gateway's yaml file:</li>\n</ul>\n<pre><code class=\"language-yaml\">  <span class=\"hljs-attr\">spring:</span>\n     <span class=\"hljs-attr\">cloud:</span>\n       <span class=\"hljs-attr\">nacos:</span>\n         <span class=\"hljs-attr\">discovery:</span>\n            <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:8848</span> <span class=\"hljs-comment\"># your nacos address</span>\n</code></pre>\n<ul>\n<li>restart your gateway service.</li>\n</ul>\n<h2>SpringCloud integration with gateway.</h2>\n<ul>\n<li>add these dependencies in your project：</li>\n</ul>\n<pre><code class=\"language-xml\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-client-springcloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>add these config values in your yaml file:</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">soul:</span>\n  <span class=\"hljs-attr\">springcloud:</span>\n    <span class=\"hljs-attr\">admin-url:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n    <span class=\"hljs-attr\">context-path:</span> <span class=\"hljs-string\">/springcloud</span>\n    <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">http</span>\n<span class=\"hljs-comment\"># adminUrl: 'ip + port' of your soul-admin project, pls note 'http://' is necessary.</span>\n<span class=\"hljs-comment\"># contextPath: your project's route prefix through soul gateway, such as /order ，/product etc，gateway will route based on it.</span>\n<span class=\"hljs-comment\"># appName：your project name,the default value is`spring.application.name`.</span>\n</code></pre>\n<ul>\n<li>\n<p>add the annotation <code>@SoulSpringCloudClient</code> in your <code>controller</code> interface.</p>\n</li>\n<li>\n<p>you can apply the annotation to class-level in a controller.the name of the path variable is prefix and '/**' will apply proxy for entire interfaces.</p>\n<ul>\n<li>example （1）：both <code>/test/payment</code> and <code>/test/findByUserId</code> will be handled by gateway.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/test\"</span>)\n <span class=\"hljs-meta\">@SoulSpringCloudClient</span>(path = <span class=\"hljs-string\">\"/test/**\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HttpTestController</span> </span>{\n     \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/payment\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">post</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> UserDTO userDTO)</span> </span>{\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }\n     \n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findByUserId\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">findByUserId</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"userId\"</span>)</span> <span class=\"hljs-keyword\">final</span> String userId) </span>{\n         UserDTO userDTO = <span class=\"hljs-keyword\">new</span> UserDTO();\n         userDTO.setUserId(userId);\n         userDTO.setUserName(<span class=\"hljs-string\">\"hello world\"</span>);\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }    \n  }\n</code></pre>\n<ul>\n<li>example （2）：<code>/order/save</code> will be handled by gateway, and <code>/order/findById</code> won't.</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-meta\">@SoulSpringCloudClient</span>(path = <span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">OrderController</span> </span>{\n \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> OrderDTO orderDTO)</span> </span>{\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world save order\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n\n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findById\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">findById</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"id\"</span>)</span> <span class=\"hljs-keyword\">final</span> String id) </span>{\n         OrderDTO orderDTO = <span class=\"hljs-keyword\">new</span> OrderDTO();\n         orderDTO.setId(id);\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world findById\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n }\n</code></pre>\n<ul>\n<li>start your service, get the log <code>dubbo client register success</code>，then your interface has been added with soul gateway successfully.</li>\n</ul>\n<h2>plugin setting</h2>\n<ul>\n<li>enable Spring Cloud plugin in <code>soul-admin</code>.</li>\n</ul>\n<h2>User request</h2>\n<ul>\n<li>\n<p>Send the request as before, only two points need to notice.</p>\n</li>\n<li>\n<p>firstly，the domain name that requested before in your service, now need to replace with gateway's domain name.</p>\n</li>\n<li>\n<p>secondly，soul gateway needs a route prefix which comes from <code>contextPath</code>, it configured during the integration with gateway, you can change it freely in divide plugin of <code>soul-admin</code>, if your familiar with it.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\">\n<span class=\"hljs-comment\"># for example, your have an order service and it has a interface, the request url: http://localhost:8080/test/save</span>\n\n<span class=\"hljs-comment\"># now need to change to：http://localhost:9195/order/test/save</span>\n\n<span class=\"hljs-comment\"># we can see localhost:9195 is the gateway's ip port, default port number is 9195 ，/order is the contextPath in your config yaml file. </span>\n\n<span class=\"hljs-comment\"># the request of other parameters don't change.</span>\n\n<span class=\"hljs-comment\"># Any questions, pls join the group and we can talk about it.</span>\n\n</code></pre>\n<ul>\n<li>then you can visit, very easy and simple。</li>\n</ul>\n",
  "link": "\\en-us\\docs\\soul\\user-springcloud.html",
  "meta": {
    "title": "springCloud with soul gateway",
    "keywords": "soul",
    "description": "springCloud with soul gateway"
  }
}
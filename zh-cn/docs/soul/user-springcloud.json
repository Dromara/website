{
  "filename": "user-springcloud.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>此篇文章是教你如何将springCloud接口，快速接入到soul网关。</p>\n</li>\n<li>\n<p>请在 soul-admin 后台将 <code>springCloud</code> 插件设置为开启。</p>\n</li>\n<li>\n<p>接入前，请正确的启动 <code>soul-admin</code> , 以及<a href=\"setup.md\">搭建环境</a> Ok。</p>\n</li>\n</ul>\n<h2>引入网关 springCloud的插件支持</h2>\n<ul>\n<li>在网关的 pom.xml 文件中引入如下依赖。</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!--soul springCloud plugin start--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-springcloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n   <span class=\"hljs-comment\">&lt;!--soul springCloud plugin end--&gt;</span>\n\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span> \n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>如果你使用 <code>eureka</code> 作为 springCloud的注册中心</p>\n<ul>\n<li>新增如下依赖：</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在网关的yml文件中 新增如下配置:</li>\n</ul>\n<pre><code class=\"language-yaml\">   <span class=\"hljs-attr\">eureka:</span>\n     <span class=\"hljs-attr\">client:</span>\n       <span class=\"hljs-attr\">serviceUrl:</span>\n         <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://localhost:8761/eureka/</span> <span class=\"hljs-comment\"># 你的eureka地址</span>\n     <span class=\"hljs-attr\">instance:</span>\n       <span class=\"hljs-attr\">prefer-ip-address:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<ul>\n<li>\n<p>如果你使用 <code>nacos</code> 作为 springCloud的注册中心</p>\n<ul>\n<li>新增如下依赖：</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.1.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在网关的yml文件中 新增如下配置:</li>\n</ul>\n<pre><code class=\"language-yaml\">  <span class=\"hljs-attr\">spring:</span>\n     <span class=\"hljs-attr\">cloud:</span>\n       <span class=\"hljs-attr\">nacos:</span>\n         <span class=\"hljs-attr\">discovery:</span>\n            <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:8848</span> <span class=\"hljs-comment\"># 你的nacos地址</span>\n</code></pre>\n<ul>\n<li>重启你的网关服务。</li>\n</ul>\n<h2>SpringCloud服务接入网关。</h2>\n<ul>\n<li>在你提供服务的项目中,引入如下依赖：</li>\n</ul>\n<pre><code class=\"language-xml\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-client-springcloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在你的yml文件中新增如下配置:</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">soul:</span>\n  <span class=\"hljs-attr\">springcloud:</span>\n    <span class=\"hljs-attr\">admin-url:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n    <span class=\"hljs-attr\">context-path:</span> <span class=\"hljs-string\">/springcloud</span>\n    <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">http</span>\n<span class=\"hljs-comment\"># adminUrl: 为你启动的soul-admin 项目的ip + 端口，注意要加http://</span>\n<span class=\"hljs-comment\"># contextPath: 为你的这个mvc项目在soul网关的路由前缀，这个你应该懂意思把？ 比如/order ，/product 等等，网关会根据你的这个前缀来进行路由.</span>\n<span class=\"hljs-comment\"># appName：你的应用名称，不配置的话，会默认取 `spring.application.name` 的值</span>\n</code></pre>\n<ul>\n<li>\n<p>在你的 <code>controller</code>的接口上加上 <code>@SoulSpringCloudClient</code> 注解</p>\n</li>\n<li>\n<p>你可以把注解加到 <code>Controller</code> 类上面, 里面的path属性则为前缀，如果含有 <code>/**</code> 代表你的整个接口需要被网关代理</p>\n<ul>\n<li>举列子 （1）： 代表 <code>/test/payment</code>, <code>/test/findByUserId</code> 都会被网关代理。</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/test\"</span>)\n <span class=\"hljs-meta\">@SoulSpringCloudClient</span>(path = <span class=\"hljs-string\">\"/test/**\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HttpTestController</span> </span>{\n     \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/payment\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">post</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> UserDTO userDTO)</span> </span>{\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }\n     \n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findByUserId\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">findByUserId</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"userId\"</span>)</span> <span class=\"hljs-keyword\">final</span> String userId) </span>{\n         UserDTO userDTO = <span class=\"hljs-keyword\">new</span> UserDTO();\n         userDTO.setUserId(userId);\n         userDTO.setUserName(<span class=\"hljs-string\">\"hello world\"</span>);\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }    \n  }\n</code></pre>\n<ul>\n<li>举列子 （2）： 代表 <code>/order/save</code>,会被网关代理,而<code>/order/findById</code> 则不会。</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-meta\">@SoulSpringCloudClient</span>(path = <span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">OrderController</span> </span>{\n \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> OrderDTO orderDTO)</span> </span>{\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world save order\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n\n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findById\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">findById</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"id\"</span>)</span> <span class=\"hljs-keyword\">final</span> String id) </span>{\n         OrderDTO orderDTO = <span class=\"hljs-keyword\">new</span> OrderDTO();\n         orderDTO.setId(id);\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world findById\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n }\n</code></pre>\n<ul>\n<li>启动你的服务，如果输出以下日志: <code>http client register success</code>, 证明你的接口已经被注册到soul网关。</li>\n</ul>\n<h2>插件设置</h2>\n<ul>\n<li>在 <code>soul-admin</code> 插件管理中，把 springCloud插件设置为开启。</li>\n</ul>\n<h2>用户请求</h2>\n<ul>\n<li>\n<p>说白了，你之前怎么请求就怎么请求，没有很大的变动，变动的地方有2点。</p>\n</li>\n<li>\n<p>第一点，你之前请求的域名是你自己的服务，现在要换成网关的域名 （这个你听的懂？）</p>\n</li>\n<li>\n<p>第二点，soul网关需要有一个路由前缀，这个路由前缀就是你接入项目进行配置 <code>contextPath</code> ,如果熟的话，可以自由在 <code>soul-admin</code> 中的 springCloud插件进行自由更改.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\">\n<span class=\"hljs-comment\"># 比如你有一个 order服务 它有一个接口，请求路径 http://localhost:8080/test/save</span>\n\n<span class=\"hljs-comment\"># 现在就需要换成：http://localhost:9195/order/test/save</span>\n\n<span class=\"hljs-comment\"># 其中 localhost:9195 为网关的ip端口，默认端口是9195 ，/order 是你接入网关配置的 contextPath</span>\n\n<span class=\"hljs-comment\"># 其他参数，请求方式不变。</span>\n\n<span class=\"hljs-comment\"># 我讲到这里还不懂？ 请加群问吧</span>\n\n</code></pre>\n<ul>\n<li>然后你就可以进行访问了，如此的方便与简单。</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\user-springcloud.html",
  "meta": {
    "title": "springCloud接入soul网关",
    "keywords": "soul",
    "description": "springCloud接入soul网关"
  }
}
{
  "filename": "rateLimiter.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>本文只有讲解soul的限流实现</li>\n</ul>\n<h2>技术方案</h2>\n<ul>\n<li>\n<p>采用redis令牌桶算法进行限流。</p>\n</li>\n<li>\n<p>可以针对到接口级别的限流。</p>\n</li>\n<li>\n<p>流程图：\n<img src=\"https://yu199195.github.io/images/soul/limiting.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2>插件设置</h2>\n<ul>\n<li>\n<p>在 <code>soul-admin</code> 管理后台中，插件管理，找到 <code>rate_limiter</code> 将其设置为开启</p>\n</li>\n<li>\n<p>在插件中，对redis进行配置。</p>\n</li>\n<li>\n<p>目前支持redis的单机，哨兵，以及集群模式。</p>\n</li>\n<li>\n<p>如果是哨兵，集群等多节点的，在URL中的配置，请对每个实列使用 <code>;</code> 分割. 如 192.168.1.1:6379;192.168.1.2:6379。</p>\n</li>\n<li>\n<p>如果用户无需使用，在admin后台把插件禁用。</p>\n</li>\n</ul>\n<h2>如何使用</h2>\n<ul>\n<li>\n<p>根据请求参数，选择器进行匹配，再匹配到具体的规则，根据规则进行接口级别的限流。</p>\n</li>\n<li>\n<p>规则图：\n<img src=\"https://yu199195.github.io/images/soul/admin-limiter.png\" alt=\"\"></p>\n</li>\n<li>\n<p>上图代表当你请求头中method字段值是findById的时候处理速率为1，总容量为100，来进行限流。</p>\n</li>\n<li>\n<p>速率：是你允许用户每秒执行多少请求，而丢弃任何请求。这是令牌桶的填充速率。</p>\n</li>\n<li>\n<p>容量 ：是允许用户在一秒钟内执行的最大请求数。这是令牌桶可以保存的令牌数。</p>\n</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\rateLimiter.html",
  "meta": {
    "title": "rateLimiter插件",
    "keywords": "rateLimiter",
    "description": "rateLimiter插件"
  }
}
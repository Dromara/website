{
  "filename": "user-dubbo.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>此篇文章是dubbo用户使用dubbo插件支持，以及自己的dubbo服务接入soul网关的教程。</p>\n</li>\n<li>\n<p>支持 alibaba dubbo（&lt; 2.7.x） 以及 apache dubbo (&gt;=2.7.x)。</p>\n</li>\n<li>\n<p>接入前，请正确的启动 <code>soul-admin</code> , 以及<a href=\"setup.md\">搭建环境</a> Ok。</p>\n</li>\n</ul>\n<h2>引入网关对dubbo支持的插件</h2>\n<ul>\n<li>\n<p>在网关的 <code>pom.xml</code> 文件中增加如下依赖：</p>\n<ul>\n<li>alibaba dubbo 用户, dubbo版本换成你的，注册中心的jar包换成你的，一下是参考。</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">\n         <span class=\"hljs-comment\">&lt;!--soul alibaba dubbo plugin start--&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-alibaba-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n          <span class=\"hljs-comment\">&lt;!-- soul  alibaba dubbo plugin end--&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.6.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-recipes<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n</code></pre>\n<ul>\n<li>apache dubbo 用户，dubbo版本换成你的，使用什么注册中心换成你的,以下是参考,使用什么注册中心，就引入啥。</li>\n</ul>\n<pre><code class=\"language-xml\">\n         <span class=\"hljs-comment\">&lt;!--soul apache dubbo plugin start--&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-apache-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-comment\">&lt;!--soul apache dubbo plugin end--&gt;</span>\n\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.7.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n          <span class=\"hljs-comment\">&lt;!-- Dubbo Nacos registry dependency start --&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dubbo-registry-nacos<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.7.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.nacos<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>nacos-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.1.4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-comment\">&lt;!-- Dubbo Nacos registry dependency  end--&gt;</span>\n\n         <span class=\"hljs-comment\">&lt;!-- Dubbo zookeeper registry dependency start--&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-recipes<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-comment\">&lt;!-- Dubbo zookeeper registry dependency end --&gt;</span>\n</code></pre>\n<ul>\n<li>重启网关服务。</li>\n</ul>\n<h2>dubbo服务接入网关,可以参考 : <a href=\"https://github.com/Dromara/soul/tree/master/soul-test/soul-test-dubbo\">soul-test-dubbo</a></h2>\n<ul>\n<li>\n<p>alibaba dubbo 用户</p>\n<ul>\n<li>\n<p>springboot</p>\n<ul>\n<li>引入以下依赖</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-client-alibaba-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在你的yml文件中新增如下配置 ：</li>\n</ul>\n<pre><code class=\"language-yaml\">   <span class=\"hljs-attr\">soul:</span>\n     <span class=\"hljs-attr\">dubbo:</span>\n       <span class=\"hljs-attr\">adminUrl:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n       <span class=\"hljs-attr\">contextPath:</span> <span class=\"hljs-string\">/dubbo</span>\n       <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">dubbo</span>\n      <span class=\"hljs-comment\"># adminUrl: 为你启动的soul-admin 项目的ip + 端口，注意要加 http://</span>\n      <span class=\"hljs-comment\"># contextPath: 为你的这个项目在soul网关的路由前缀，这个你应该懂意思把？ 比如/order ，/product 等等，网关会根据你的这个前缀来进行路由.</span>\n      <span class=\"hljs-comment\"># appName：你的应用名称，不配置的话，会默认取 dubbo配置中application 中的名称</span>\n</code></pre>\n<ul>\n<li>\n<p>spring</p>\n<ul>\n<li>引入以下依赖 ：</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-client-alibaba-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在你的 bean定义的xml文件中新增如下 ：</li>\n</ul>\n<pre><code class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span> =<span class=\"hljs-string\">\"alibabaDubboServiceBeanPostProcessor\"</span> <span class=\"hljs-attr\">class</span> =<span class=\"hljs-string\">\"org.dromara.soul.client.alibaba.dubbo.AlibabaDubboServiceBeanPostProcessor\"</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">constructor-arg</span>  <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"dubboConfig\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"dubboConfig\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.dromara.soul.client.dubbo.common.config.DubboConfig\"</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"adminUrl\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"http://localhost:9095\"</span>/&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"contextPath\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"/你的contextPath\"</span>/&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"appName\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"你的名字\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>apache dubbo 用户</p>\n<ul>\n<li>\n<p>springboot</p>\n<ul>\n<li>引入以下依赖</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-client-apache-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在你的yml文件中新增如下配置 ：</li>\n</ul>\n<pre><code class=\"language-yaml\">    <span class=\"hljs-attr\">soul:</span>\n      <span class=\"hljs-attr\">dubbo:</span>\n        <span class=\"hljs-attr\">adminUrl:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n        <span class=\"hljs-attr\">contextPath:</span> <span class=\"hljs-string\">/dubbo</span>\n        <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">dubbo</span>\n\n       <span class=\"hljs-comment\"># adminUrl: 为你启动的soul-admin 项目的ip + 端口，注意要加 http://</span>\n       <span class=\"hljs-comment\"># contextPath: 为你的这个项目在soul网关的路由前缀，这个你应该懂意思把？ 比如/order ，/product 等等，网关会根据你的这个前缀来进行路由.</span>\n       <span class=\"hljs-comment\"># appName：你的应用名称，不配置的话，会默认取 dubbo配置中application 中的名称</span>\n</code></pre>\n<ul>\n<li>\n<p>spring</p>\n<ul>\n<li>引入以下依赖 ：</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-client-apache-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在你的 bean定义的xml文件中新增如下 ：</li>\n</ul>\n<pre><code class=\"language-xml\">         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span> =<span class=\"hljs-string\">\"apacheDubboServiceBeanPostProcessor\"</span> <span class=\"hljs-attr\">class</span> =<span class=\"hljs-string\">\"org.dromara.soul.client.apache.dubbo.ApacheDubboServiceBeanPostProcessor\"</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">constructor-arg</span>  <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"dubboConfig\"</span>/&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"dubboConfig\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.dromara.soul.client.dubbo.common.config.DubboConfig\"</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"adminUrl\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"http://localhost:9095\"</span>/&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"contextPath\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"/你的contextPath\"</span>/&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"appName\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"你的名字\"</span>/&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n</code></pre>\n<h2>dubbo 插件设置</h2>\n<ul>\n<li>\n<p>首先在 <code>soul-admin</code> 插件管理中，把<code>dubbo</code> 插件设置为开启。</p>\n</li>\n<li>\n<p>其次在 <code>dubbo</code> 插件中配置你的注册地址,或者其他注册中心的地址.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">{\"register\":\"zookeeper://localhost:2181\"}</span>   <span class=\"hljs-string\">or</span> <span class=\"hljs-string\">{\"register\":\"nacos://localhost:8848\"}</span>\n\n</code></pre>\n<h2>接口注册到网关</h2>\n<ul>\n<li>\n<p>你dubbo服务实现类的，方法上加上 <code>@SoulDubboClient</code> 注解，表示该接口方法注册到网关。</p>\n</li>\n<li>\n<p>启动你的提供者,输出日志 <code>dubbo client register success</code> 大功告成，你的dubbo接口已经发布到 soul网关.如果还有不懂的，可以参考 <code>soul-test-dubbo</code>项目.</p>\n</li>\n</ul>\n<h2>dubbo用户请求以及参数说明</h2>\n<ul>\n<li>\n<p>说白了，就是通过http的方式来请求你的dubbo服务</p>\n</li>\n<li>\n<p>soul网关需要有一个路由前缀，这个路由前缀就是你接入项目进行配置 <code>contextPath</code></p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># 比如你有一个 order服务 它有一个接口，它的注册路径 /order/test/save</span>\n\n<span class=\"hljs-comment\"># 现在就是通过 post方式请求网关：http://localhost:9195/order/test/save</span>\n\n<span class=\"hljs-comment\"># 其中 localhost:9195 为网关的ip端口，默认端口是9195 ，/order 是你dubbo接入网关配置的 contextPath</span>\n\n</code></pre>\n<ul>\n<li>\n<p>参数传递：</p>\n<ul>\n<li>\n<p>通过 http post 方式访问网关，通过body，json类型传递。</p>\n</li>\n<li>\n<p>更多参数类型传递，可以参考 <a href=\"https://github.com/Dromara/soul/tree/master/soul-test/soul-test-dubbo\">soul-test-dubbo</a> 中的接口定义，以及参数传递方式。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>单个java bean参数类型 （默认）</p>\n</li>\n<li>\n<p>多参数类型支持 ,在网关的yaml 配置中新增如下配置：</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">soul :</span>\n    <span class=\"hljs-attr\">dubbo :</span>\n      <span class=\"hljs-attr\">parameter:</span> <span class=\"hljs-string\">multi</span>\n</code></pre>\n<ul>\n<li>\n<p>自定义实现多参数支持:</p>\n<ul>\n<li>在你搭建的网关项目中，新增一个类 A，实现 <code>org.dromara.soul.web.dubbo.DubboParamResolveService</code>。</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-java\">  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DubboParamResolveService</span> </span>{\n\n      <span class=\"hljs-comment\">/**\n       * Build parameter pair.\n       * this is Resolve http body to get dubbo param.\n       *\n       * <span class=\"hljs-doctag\">@param</span> body           the body\n       * <span class=\"hljs-doctag\">@param</span> parameterTypes the parameter types\n       * <span class=\"hljs-doctag\">@return</span> the pair\n       */</span>\n      Pair&lt;String[], Object[]&gt; buildParameter(String body, String parameterTypes);\n  }\n</code></pre>\n<ul>\n<li>\n<p><code>body</code>为http中body传的json字符串.</p>\n</li>\n<li>\n<p><code>parameterTypes</code>: 匹配到的方法参数类型列表，如果有多个,则使用<code>,</code>分割。</p>\n</li>\n<li>\n<p>Pair中，left为参数类型，right为参数值，这是dubbo泛化调用的标准</p>\n</li>\n<li>\n<p>把你的类注册成Spring的bean，覆盖默认的实现。</p>\n</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@Bean</span>\n <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DubboParamResolveService <span class=\"hljs-title\">A</span><span class=\"hljs-params\">()</span> </span>{\n         <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> A();\n }\n</code></pre>\n<h2>大白话讲解如果通过http --&gt; 网关--&gt; dubbo provider</h2>\n<ul>\n<li>\n<p>说白了，就是把http请求，转成dubbo协议，内部使用dubbo泛化来进行调用。</p>\n</li>\n<li>\n<p>首先你要回想下，你的dubbo服务在接入网关的时候，是不是加了个 <code>@SoulDubboClient</code> 注解，里面是不是有个path字段来指定你请求的路径？</p>\n</li>\n<li>\n<p>你是不是还在yml中配置了一个 <code>contextPath</code>?</p>\n</li>\n<li>\n<p>如果您还记得，那我们就开始。</p>\n</li>\n<li>\n<p>假如你有一个这样的方法, contextPath 配置的是 <code>/dubbo</code></p>\n</li>\n</ul>\n<pre><code class=\"language-java\">    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-meta\">@SoulDubboClient</span>(path = <span class=\"hljs-string\">\"/insert\"</span>, desc = <span class=\"hljs-string\">\"插入一条数据\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DubboTest <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">final</span> DubboTest dubboTest)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> dubboTest;\n    }\n\n</code></pre>\n<ul>\n<li>\n<p>那么我们请求的路径为: <a href=\"http://localhost:9195/dubbo/insert\">http://localhost:9195/dubbo/insert</a> ,再说一下，<code>localhost:9195</code>是网关的域名，如果你更改了，这里也要改。</p>\n</li>\n<li>\n<p>那么请求参数呢？ <code>DubboTest</code> 是一个javabean对象，有2个字段，id与name ，那么我们通过body中传递这个对象的json数据就好。</p>\n</li>\n</ul>\n<pre><code>{&quot;id&quot;:&quot;1234&quot;,&quot;name&quot;:&quot;XIAO5y&quot;}\n\n</code></pre>\n<ul>\n<li>如果你的接口中,没有参数，那么body传值为:</li>\n</ul>\n<pre><code>{}\n\n</code></pre>\n<ul>\n<li>如果你的接口有很多个参数? 往上看一点，有介绍。</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\user-dubbo.html",
  "meta": {
    "title": "dubbo接入soul网关",
    "keywords": "soul",
    "description": "dubbo接入soul网关"
  }
}
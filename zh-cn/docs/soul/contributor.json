{
  "filename": "contributor.md",
  "__html": "<p>您可以报告bug，提交一个新的功能增强建议或者直接对以上内容提交改进补丁。</p>\n<h2>提交issue</h2>\n<ul>\n<li>在提交issue之前，请经过充分的搜索，确定该issue不是通过简单的检索即可以解决的问题。</li>\n<li>查看<a href=\"https://github.com/dromara/soul/issues\">issue列表</a>，确定该issue不是一个重复的问题。</li>\n<li><a href=\"https://github.com/dromara/soul/issues/new/choose\">新建</a>一个issue并选择您的issue类型。</li>\n<li>使用一个清晰并有描述性的标题来定义issue。</li>\n<li>根据模板填写必要信息。</li>\n<li>在提交issue之后，对该issue分配合适的标签。如：bug，enhancement，discussion等。</li>\n<li>请对自己提交的issue保持关注，在讨论中进一步提供必要信息。</li>\n</ul>\n<h2>开发流程</h2>\n<h3>Fork分支到本地，设置upstream</h3>\n<ul>\n<li>从soul的repo上fork一个分支到您自己的repo来开始工作，并设置upstream为soul的repo。</li>\n</ul>\n<pre><code class=\"language-shell\">git remote add upstream https://github.com/dromara/soul.git\n</code></pre>\n<h3>选择issue</h3>\n<ul>\n<li>请在选择您要修改的issue。如果是您新发现的问题或想提供issue中没有的功能增强，请先新建一个issue并设置正确的标签。</li>\n<li>在选中相关的issue之后，请回复以表明您当前正在这个issue上工作。并在回复的时候为自己设置一个deadline，添加至回复内容中。</li>\n</ul>\n<h3>创建分支</h3>\n<ul>\n<li>切换到fork的master分支，拉取最新代码，创建本次的分支。</li>\n</ul>\n<pre><code class=\"language-shell\">git checkout master\ngit pull upstream master\ngit checkout -b issueNo\n</code></pre>\n<p><strong>注意</strong> ：PR会按照squash的方式进行merge，如果不创建新分支，本地和远程的提交记录将不能保持同步。</p>\n<h3>编码</h3>\n<ul>\n<li>请您在开发过程中遵循soul的 <a href=\"code-conduct.md\">开发规范</a>。并在准备提交pull request之前完成相应的检查。</li>\n<li>将修改的代码push到fork库的分支上。</li>\n</ul>\n<pre><code class=\"language-shell\">git add 修改代码\ngit commit -m 'commit log'\ngit push origin issueNo\n</code></pre>\n<h3>提交PR</h3>\n<ul>\n<li>发送一个pull request到soul的master分支。</li>\n<li>接着导师做CodeReview，然后他会与您讨论一些细节（包括设计，实现，性能等）。当导师对本次修改满意后，会将提交合并到当前开发版本的分支中。</li>\n<li>最后，恭喜您已经成为了Soul的贡献者！</li>\n</ul>\n<h3>删除分支</h3>\n<ul>\n<li>在导师将pull request合并到soul的master分支中之后，您就可以将远程的分支（origin/issueNo）及与远程分支（origin/issueNo）关联的本地分支（issueNo）删除。</li>\n</ul>\n<pre><code class=\"language-shell\">git checkout master\ngit branch -d issueNo\ngit push origin --delete issueNo\n</code></pre>\n<h3>注意</h3>\n<p>为了让您的id显示在contributor列表中，别忘了以下设置：</p>\n<pre><code class=\"language-shell\">git config --global user.name \"username\"\ngit config --global user.email \"username@mail.com\"\n</code></pre>\n<h3>常见问题</h3>\n<ul>\n<li>每次Pull Request(PR)后,你需要执行以下操作,否则,之前PR的提交记录会和这次的提交记录混在一起,具体操作流程如下:</li>\n</ul>\n<pre><code class=\"language-shell\">git checkout master\ngit fetch upstream\ngit reset --hard upstream/master\ngit push -f\n</code></pre>\n",
  "link": "/zh-cn/docs/soul/contributor.html",
  "meta": {
    "title": "soul-contributor",
    "keywords": "soul-contributor",
    "description": "soul-contributor贡献者指南"
  }
}
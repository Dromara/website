{
  "filename": "dev-filter.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>本文是说明,如何进行 <code>org.springframework.web.server.WebFliter</code> 的扩展</li>\n</ul>\n<h2>跨域支持</h2>\n<ul>\n<li>新增 <code>org.dromara.soul.bootstrap.cors.CrossFilter</code> 实现 WebFilter.</li>\n</ul>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CrossFilter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">WebFilter</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String ALLOWED_HEADERS = <span class=\"hljs-string\">\"x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN,token,username,client\"</span>;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String ALLOWED_METHODS = <span class=\"hljs-string\">\"*\"</span>;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String ALLOWED_ORIGIN = <span class=\"hljs-string\">\"*\"</span>;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String ALLOWED_EXPOSE = <span class=\"hljs-string\">\"*\"</span>;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String MAX_AGE = <span class=\"hljs-string\">\"18000\"</span>;\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-meta\">@SuppressWarnings</span>(<span class=\"hljs-string\">\"all\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Mono&lt;Void&gt; <span class=\"hljs-title\">filter</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">final</span> ServerWebExchange exchange, <span class=\"hljs-keyword\">final</span> WebFilterChain chain)</span> </span>{\n        ServerHttpRequest request = exchange.getRequest();\n        <span class=\"hljs-keyword\">if</span> (CorsUtils.isCorsRequest(request)) {\n            ServerHttpResponse response = exchange.getResponse();\n            HttpHeaders headers = response.getHeaders();\n            headers.add(<span class=\"hljs-string\">\"Access-Control-Allow-Origin\"</span>, ALLOWED_ORIGIN);\n            headers.add(<span class=\"hljs-string\">\"Access-Control-Allow-Methods\"</span>, ALLOWED_METHODS);\n            headers.add(<span class=\"hljs-string\">\"Access-Control-Max-Age\"</span>, MAX_AGE);\n            headers.add(<span class=\"hljs-string\">\"Access-Control-Allow-Headers\"</span>, ALLOWED_HEADERS);\n            headers.add(<span class=\"hljs-string\">\"Access-Control-Expose-Headers\"</span>, ALLOWED_EXPOSE);\n            headers.add(<span class=\"hljs-string\">\"Access-Control-Allow-Credentials\"</span>, <span class=\"hljs-string\">\"true\"</span>);\n            <span class=\"hljs-keyword\">if</span> (request.getMethod() == HttpMethod.OPTIONS) {\n                response.setStatusCode(HttpStatus.OK);\n                <span class=\"hljs-keyword\">return</span> Mono.empty();\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> chain.filter(exchange);\n    }\n}\n</code></pre>\n<ul>\n<li>将 CrossFilter 注册成为 spring的bean,完事.</li>\n</ul>\n<h2>网关过滤 springboot健康检查</h2>\n<ul>\n<li>注意顺序，使用 <code>@Order</code> 注解</li>\n</ul>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Component</span>\n<span class=\"hljs-meta\">@Order</span>(-<span class=\"hljs-number\">99</span>)\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HealthFilter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">WebFilter</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String[] FILTER_TAG = {<span class=\"hljs-string\">\"/actuator/health\"</span>, <span class=\"hljs-string\">\"/health_check\"</span>};\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> HealthEndpoint healthEndpoint;\n\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-title\">HealthFilter</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">final</span> HealthEndpoint endpoint)</span> </span>{\n        healthEndpoint = endpoint;\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Mono&lt;Void&gt; <span class=\"hljs-title\">filter</span><span class=\"hljs-params\">(@Nullable <span class=\"hljs-keyword\">final</span> ServerWebExchange exchange, @Nullable <span class=\"hljs-keyword\">final</span> WebFilterChain chain)</span> </span>{\n        ServerHttpRequest request = Objects.requireNonNull(exchange).getRequest();\n        String urlPath = request.getURI().getPath();\n        <span class=\"hljs-keyword\">for</span> (String check : FILTER_TAG) {\n            <span class=\"hljs-keyword\">if</span> (check.equals(urlPath)) {\n                Health health = healthEndpoint.health();\n                String result = Objects.requireNonNull(JsonUtils.toJson(health));\n                DataBuffer dataBuffer = exchange.getResponse().bufferFactory().wrap(result.getBytes());\n                <span class=\"hljs-keyword\">return</span> exchange.getResponse().writeWith(Mono.just(dataBuffer));\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> Objects.requireNonNull(chain).filter(exchange);\n    }\n\n}\n\n</code></pre>\n<h2>继承 <code>org.dromara.soul.web.filter.AbstractWebFilter</code></h2>\n<ul>\n<li>\n<p>新增一个类，继承它</p>\n</li>\n<li>\n<p>实现它的2个方法</p>\n</li>\n</ul>\n<pre><code class=\"language-java\">   <span class=\"hljs-comment\">/**\n     * this is Template Method ,children Implement your own filtering logic.\n     *\n     * <span class=\"hljs-doctag\">@param</span> exchange the current server exchange\n     * <span class=\"hljs-doctag\">@param</span> chain    provides a way to delegate to the next filter\n     * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-doctag\">@code</span> Mono&lt;Boolean&gt;} result：TRUE (is pass)，and flow next filter；FALSE (is not pass) execute doDenyResponse(ServerWebExchange exchange)\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">abstract</span> Mono&lt;Boolean&gt; <span class=\"hljs-title\">doFilter</span><span class=\"hljs-params\">(ServerWebExchange exchange, WebFilterChain chain)</span></span>;\n\n    <span class=\"hljs-comment\">/**\n     * this is Template Method ,children Implement your own And response client.\n     *\n     * <span class=\"hljs-doctag\">@param</span> exchange the current server exchange.\n     * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-doctag\">@code</span> Mono&lt;Void&gt;} response msg.\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">abstract</span> Mono&lt;Void&gt; <span class=\"hljs-title\">doDenyResponse</span><span class=\"hljs-params\">(ServerWebExchange exchange)</span></span>;\n</code></pre>\n<ul>\n<li><code>doFilter</code> 方法返回 Mono<true> 表示通过,反之则不通过，不通过的时候，会调用 <code>doDenyResponse</code>,输出相关信息到前端.</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\dev-filter.html",
  "meta": {
    "title": "filter扩展",
    "keywords": "soul",
    "description": "filter扩展"
  }
}
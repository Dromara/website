{
  "filename": "joinUp-mvc.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>此篇文章是教你如何把自己的项目中的接口，快速接入到soul网关.</p>\n</li>\n<li>\n<p>只适合springboot用户.</p>\n</li>\n<li>\n<p>接入前，请正确的启动 <code>soul-admin</code> ,<code>soul-bootstrap</code>.</p>\n</li>\n</ul>\n<h2>springMvc  (springboot用户)</h2>\n<ul>\n<li>引入jar包</li>\n</ul>\n<pre><code>&lt;dependency&gt;\n   &lt;groupId&gt;org.dromara&lt;/groupId&gt;\n   &lt;artifactId&gt;soul-client-springmvc&lt;/artifactId&gt;\n   &lt;version&gt;2.1.0-RELEASE&lt;/version&gt;\n &lt;/dependency&gt;\n</code></pre>\n<ul>\n<li>yml配置</li>\n</ul>\n<pre><code class=\"language-yml\"><span class=\"hljs-attr\">soul:</span>\n  <span class=\"hljs-attr\">http:</span>\n    <span class=\"hljs-attr\">adminUrl:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n    <span class=\"hljs-attr\">contextPath:</span> <span class=\"hljs-string\">/http</span>\n    <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">http</span>\n\n\n<span class=\"hljs-comment\"># adminUrl: 为你启动的soul-admin 项目的ip + 端口，注意要加http://</span>\n<span class=\"hljs-comment\"># contextPath: 为你的这个mvc项目在soul网关的路由前缀，这个你应该懂意思把？ 比如/order ，/product 等等，网关会根据你的这个前缀来进行路由.</span>\n<span class=\"hljs-comment\"># appName：你的应用名称，不配置的话，会默认取 `spring.application.name` 的值</span>\n\n\n</code></pre>\n<ul>\n<li>在你的 <code>controller</code>的接口上加上 <code>SoulClient</code> 注解</li>\n</ul>\n<pre><code>@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.TYPE, ElementType.METHOD})\npublic @interface SoulClient {\n\n    /**\n     * 提供出去的接口路径，注意这里是真实的路径，和你的controller中的方法路径一样.\n     * Path string.\n     *\n     * @return the string\n     */\n    String path();\n\n    /**\n     * 接口路径描述,方便用户选择.\n     *\n     * @return String\n     */\n    String desc();\n\n    /**\n     * Enabled boolean.\n     *\n     * @return the boolean\n     */\n    boolean enabled() default true;\n</code></pre>\n<ul>\n<li>启动你的项目，你标上 <code>soulClient</code> 的方法已经注册到soul网关.</li>\n</ul>\n<h4>到这里对于 springMvc 项目 还不是最佳的接入方式，因为我们还没有接入ip与端口. 如果是以上的话，还需要在soul-admin 中的divide插件中找到你对应的路由，然后手动填写地址。</h4>\n<ul>\n<li>\n<p>我们来开始最佳实现，实现ip端口的自动注册（因为如果您使用docker容器部署的话，ip端口会变动，每次发布都需要手动去改，这谁顶的住啊？）</p>\n</li>\n<li>\n<p>第一步 ： 修改 <code>soul-admin</code> 中的yml，加上如下配置,需要有zookeeper. 然后重启 <code>soul-admin</code></p>\n</li>\n</ul>\n<pre><code class=\"language-yml\"><span class=\"hljs-attr\">soul:</span>\n  <span class=\"hljs-attr\">http:</span>\n    <span class=\"hljs-attr\">register:</span> <span class=\"hljs-literal\">true</span>   <span class=\"hljs-comment\"># 设置为true</span>\n    <span class=\"hljs-attr\">zookeeperUrl:</span> <span class=\"hljs-string\">localhost:2181</span>  <span class=\"hljs-comment\">#设置你的zk地址</span>\n</code></pre>\n<ul>\n<li>第二步:修改你接入项目中的yml配置，增加如下配置，启动你的 springboot项目.</li>\n</ul>\n<pre><code class=\"language-yml\"><span class=\"hljs-attr\">soul:</span>\n  <span class=\"hljs-attr\">http:</span>\n    <span class=\"hljs-attr\">zookeeperUrl:</span> <span class=\"hljs-string\">localhost:2181</span>  <span class=\"hljs-comment\">#设置你的zk地址</span>\n</code></pre>\n<ul>\n<li>大功告成，你的服务已经接入到 soul,里面就可以访问拉 ，如果还有不懂的，可以参考 <code>soul-test-http</code>项目.</li>\n</ul>\n<h2>插件设置</h2>\n<ul>\n<li>在 <code>soul-admin</code> 插件管理中，把divide插件设置为开启。</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\joinUp-mvc.html",
  "meta": {
    "title": "接入soul网关",
    "keywords": "soul",
    "description": "接入soul网关"
  }
}
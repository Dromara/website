{
  "filename": "metaData.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>本篇主要讲解在soul网关中元数据的概念，设计，以及如何对接。</li>\n</ul>\n<h2>技术方案</h2>\n<ul>\n<li>\n<p>在数据库中，新增了一张表，然后通过数据同步的方案，会把这张表的数据同步到网关JVM内存。</p>\n</li>\n<li>\n<p>表结构如下:</p>\n</li>\n</ul>\n<pre><code class=\"language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span>  <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`meta_data`</span> (\n  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">128</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'id'</span>,\n  <span class=\"hljs-string\">`app_name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'应用名称'</span>,\n  <span class=\"hljs-string\">`path`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'路径,不能重复'</span>,\n  <span class=\"hljs-string\">`path_desc`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'路径描述'</span>,\n  <span class=\"hljs-string\">`rpc_type`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">64</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'rpc类型'</span>,\n  <span class=\"hljs-string\">`service_name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'服务名称'</span>,\n  <span class=\"hljs-string\">`method_name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'方法名称'</span>,\n  <span class=\"hljs-string\">`parameter_types`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'参数类型 多个参数类型 逗号隔开'</span>,\n  <span class=\"hljs-string\">`rpc_ext`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">1024</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'rpc的扩展信息，json格式'</span>,\n  <span class=\"hljs-string\">`date_created`</span> datetime(<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'创建时间'</span>,\n  <span class=\"hljs-string\">`date_updated`</span> datetime(<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">ON</span> <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">CURRENT_TIMESTAMP</span>(<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'更新时间'</span>,\n  <span class=\"hljs-string\">`enabled`</span> <span class=\"hljs-built_in\">tinyint</span>(<span class=\"hljs-number\">4</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">'启用状态'</span>,\n  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>) <span class=\"hljs-keyword\">USING</span> BTREE\n) <span class=\"hljs-keyword\">ENGINE</span> = <span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> = utf8mb4 <span class=\"hljs-keyword\">COLLATE</span> = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;\n\n</code></pre>\n<ul>\n<li>\n<p>元数据设计，目前最主要的是对dubbo的泛化调用上进行使用。</p>\n</li>\n<li>\n<p>我重点讲一下 <code>path</code> 字段，在请求网关的时候，会根据你的path字段来匹配到一条数据，然后进行后续的流程.</p>\n</li>\n<li>\n<p>重点讲一下 <code>rpc_ext</code>字段,如果是dubbo类型的服务接口，如果服务接口设置了 group,version字段的时候，会存在这个字段.</p>\n<ul>\n<li>dubbo 类型 字段结构是 如下，那么存储的就是json格式的字符串.</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RpcExt</span> </span>{\n\n        <span class=\"hljs-keyword\">private</span> String group;\n\n        <span class=\"hljs-keyword\">private</span> String version;\n\n        <span class=\"hljs-keyword\">private</span> String loadbalance;\n\n        <span class=\"hljs-keyword\">private</span> Integer retries;\n\n        <span class=\"hljs-keyword\">private</span> Integer timeout;\n\n    }\n</code></pre>\n</li>\n</ul>\n<h2>元数据存储</h2>\n<ul>\n<li>\n<p>每个dubbo接口方法，对应一条元数据。</p>\n</li>\n<li>\n<p>springcloud协议，只会存储一条数据， path为 <code>/contextPath/**</code>。</p>\n</li>\n<li>\n<p>http服务，则不会有任何数据。</p>\n</li>\n</ul>\n",
  "link": "/zh-cn/docs/soul/metaData.html",
  "meta": {
    "title": "元数据概念设计",
    "keywords": "soul",
    "description": "元数据概念设计"
  }
}
{
  "filename": "plugin-monitor.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>monitor插件是网关用来监控自身运行状态（JVM相关），请求的响应迟延，QPS、TPS等相关metrics。</li>\n</ul>\n<h2>技术方案</h2>\n<ul>\n<li>\n<p>流程图\n<img src=\"https://yu199195.github.io/images/soul/soul-metrics.png\" alt=\"\"></p>\n</li>\n<li>\n<p>异步或者同步的方式，在soul网关里面进行 <code>metrics</code> 埋点。</p>\n</li>\n<li>\n<p><code>prometheus</code> 服务端通过 http 请求 来 拉取  <code>metrics</code>，再使用 <code>Grafana</code> 展示。</p>\n</li>\n</ul>\n<h2>插件设置</h2>\n<ul>\n<li>\n<p>在 <code>soul-admin</code>--&gt; 插件管理-&gt; monitor ,设置为开启。</p>\n</li>\n<li>\n<p>在 monitor 插件中新增以下配置</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">{\"metricsName\":\"prometheus\",\"host\":\"localhost\",\"port\":\"9191\",\"async\":\"true\"}</span>\n\n<span class=\"hljs-comment\"># port : 为暴露给 prometheus服务来拉取的端口</span>\n<span class=\"hljs-comment\"># host : 不填写则为soul网关的host.</span>\n<span class=\"hljs-comment\"># async :\"true\" 为异步埋点， false 为同步埋点</span>\n</code></pre>\n<ul>\n<li>如果用户不使用，则在 <code>soul-admin</code> 后台把此插件停用。</li>\n</ul>\n<h2>插件使用</h2>\n<ul>\n<li>在网关的 pom.xml 文件中添加 <code>monitor</code> 的支持。</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!-- soul monitor plugin start--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-monitor<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- soul monitor plugin end--&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>选择器和规则，请详细看 : <a href=\"selector.md\">选择器规则</a>。</p>\n<ul>\n<li>只有当匹配的url，才会进行url请求埋点。</li>\n</ul>\n</li>\n</ul>\n<h2>metrics信息</h2>\n<ul>\n<li>\n<p>所有的JVM，线程，内存，等相关信息都会埋点，可以在 <code>Granfana</code> 面板中，新增一个 JVM 模块，则会完全展示 具体请看：<a href=\"https://github.com/prometheus/jmx_exporter\">https://github.com/prometheus/jmx_exporter</a></p>\n</li>\n<li>\n<p>另外还有如下自定义的 <code>metrics</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">标签名称</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">request_total</td>\n<td style=\"text-align:left\">Counter</td>\n<td style=\"text-align:left\">无</td>\n<td style=\"text-align:left\">收集Soul网关所有的请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">http_request_total</td>\n<td style=\"text-align:left\">Counter</td>\n<td style=\"text-align:left\">path,type</td>\n<td style=\"text-align:left\">收集monitor插件匹配的请求</td>\n</tr>\n</tbody>\n</table>\n<h2>收集 metrics</h2>\n<ul>\n<li>用户自己搭建<code>Prometheus</code> 服务，在 prometheus.yml 文件中新增如下配置：</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">scrape_configs:</span>\n  <span class=\"hljs-comment\"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">job_name:</span> <span class=\"hljs-string\">'shardingSphere-proxy'</span>\n    <span class=\"hljs-comment\"># metrics_path defaults to '/metrics'</span>\n    <span class=\"hljs-comment\"># scheme defaults to 'http'.</span>\n    <span class=\"hljs-attr\">static_configs:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">targets:</span> <span class=\"hljs-string\">['localhost:9191']</span>\n</code></pre>\n<h2>面板展示</h2>\n<p>推荐使用 <code>Granfana</code>，用户可以自定义查询来个性化显示面板盘，后续我会提供默认的面板盘配置。</p>\n",
  "link": "/zh-cn/docs/soul/plugin-monitor.html",
  "meta": {
    "title": "monitor插件",
    "keywords": "monitor",
    "description": "monitor插件"
  }
}
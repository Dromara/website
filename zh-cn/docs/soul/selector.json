{
  "filename": "selector.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>选择器和规则是soul网关中最灵魂的东西。掌握好它，你可以对任何流量进行管理。</p>\n</li>\n<li>\n<p>本篇主要详解soul网关中，选择器与规则的概念，以及如何使用。</p>\n</li>\n</ul>\n<h2>大体理解</h2>\n<ul>\n<li>\n<p>一个插件有多个选择器，一个选择器对应多种规则。选择器相当于是对流量的第一次筛选，规则就是最终的筛选。</p>\n</li>\n<li>\n<p>我们想象一下，在一个插件里面，我们是不是希望根据我们的配置，达到满足条件的流量，我们插件才去执行它？</p>\n</li>\n<li>\n<p>选择器和规则就是为了让流量在满足特定的条件下，才去执行我们想要的，这个你首先头脑要点数。</p>\n</li>\n<li>\n<p>数据结构可以参考之前的 <a href=\"db.md\">数据库设计</a></p>\n</li>\n</ul>\n<h2>选择器</h2>\n<p><img src=\"https://yu199195.github.io/images/soul/selector.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>选择器详解：</p>\n<ul>\n<li>名称：为你的选择器起一个容易分辨的名字</li>\n<li>类型：custom flow 是自定义流量。full flow 是全流量。自定义流量就是请求会走你下面的匹配方式与条件。全流量则不走。</li>\n<li>匹配方式：and 或者or 是指下面多个条件是按照and 还是or的方式来组合。</li>\n<li>条件：\n<ul>\n<li>uri：是指你根据uri的方式来筛选流量，match的方式支持模糊匹配（/**）</li>\n<li>header：是指根据请求头里面的字段来筛选流量。</li>\n<li>query：是指根据uri的查询条件来进行筛选流量。</li>\n<li>ip：是指根据你请求的真实ip，来筛选流量。</li>\n<li>host：是指根据你请求的真实host，来筛选流量。</li>\n<li>post：建议不要使用。</li>\n<li>条件匹配：\n<ul>\n<li>match：模糊匹配，建议和uri条件搭配，支持 restful风格的匹配。（/test/**）</li>\n<li>=：前后值相等，才能匹配。</li>\n<li>regEx：正则匹配，表示前面一个值去匹配后面的正则表达式。</li>\n<li>like：字符串模糊匹配。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>是否开启：打开才会生效</li>\n<li>打印日志：打开的时候，当匹配上的时候，会打印匹配日志。</li>\n<li>执行顺序：当多个选择器的时候，执行顺序小的优先执行。</li>\n</ul>\n</li>\n<li>\n<p>上述图片中表示:当请求的<code>uri</code>前缀是 <code>/test</code>，并且<code>header</code> 头上 <code>module</code> 字段值为<code>test</code> 的时候，会转发到 <code>1.1.1.1:8080</code> 这个服务。</p>\n</li>\n<li>\n<p>选择器建议：可以<code>uri</code> 条件， <code>match</code> 前缀 （/contextPath），进行第一道流量筛选。</p>\n</li>\n</ul>\n<h2>规则</h2>\n<p><img src=\"https://yu199195.github.io/images/soul/rule.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>当流量经过选择器匹配成功之后，会进入规则来进行最终的流量匹配。</p>\n</li>\n<li>\n<p>规则是对流量最终执行逻辑的确认。</p>\n</li>\n<li>\n<p>规则详解：</p>\n<ul>\n<li>名称：为你的规则起一个容易分辨的名字</li>\n<li>匹配方式：and 或者or 是指下面多个条件是按照and 还是or。</li>\n<li>条件：\n<ul>\n<li>uri：是指你根据uri的方式来筛选流量，match的方式支持模糊匹配（/**）</li>\n<li>header：是指根据请求头里面的字段来筛选流量。</li>\n<li>query：是指根据uri的查询条件来进行筛选流量。</li>\n<li>ip：是指根据你请求的真实ip，来筛选流量。</li>\n<li>host：是指根据你请求的真实host，来筛选流量。</li>\n<li>post：建议不要使用。</li>\n<li>条件匹配:\n<ul>\n<li>match : 模糊匹配，建议和uri条件搭配，支持 restful风格的匹配。（/test/**）</li>\n<li>= : 前后值相等，才能匹配。</li>\n<li>regEx : 正则匹配，表示前面一个值去匹配后面的正则表达式。</li>\n<li>like ：字符串模糊匹配。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>是否开启：打开才会生效。</li>\n<li>打印日志：打开的时候，当匹配上的时候，会打印匹配日志。</li>\n<li>执行顺序：当多个选择器的时候，执行顺序小的优先执行。</li>\n<li>处理：每个插件的规则处理不一样，具体的差有具体的处理，具体请查看每个对应插件的处理。</li>\n</ul>\n</li>\n<li>\n<p>上图表示：当 <code>uri</code> 等于  <code>/http/order/save</code> 的时候该规则被匹配，就会执行该规则中，负载策略是 <code>random</code>。</p>\n</li>\n<li>\n<p>联合选择器，我们来表述一下：当一个 请求的 <code>uri</code> 为 <code>/http/order/save</code>，会通过 <code>random</code> 的方式，转发到 <code>1.1.1.1:8080</code>。</p>\n</li>\n<li>\n<p>规则建议：可以<code>uri</code> 条件， <code>match</code> 最真实的<code>uri路径</code>，进行流量的最终筛选 。</p>\n</li>\n</ul>\n<h2>条件详解</h2>\n<ul>\n<li>\n<p>uri 匹配 （推荐）</p>\n<ul>\n<li>\n<p>uri匹配是根据你请求路径中的uri来进行匹配，在接入网关的时候，前端几乎不用做任何更改。</p>\n</li>\n<li>\n<p>当使用 <code>match</code> 方式匹配时候，同 <code>springmvc</code> 模糊匹配原理相同。</p>\n</li>\n<li>\n<p>在选择器中，推荐使用uri中的前缀来进行匹配，而在规则中，则使用具体路径来进行匹配。</p>\n</li>\n<li>\n<p>该匹配方式的时候，在匹配字段名称可以任意填写，匹配字段值需要正确填写。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>header 匹配</p>\n<ul>\n<li>header是根据你的<code>http</code> 请求头中的字段值来匹配。</li>\n</ul>\n</li>\n<li>\n<p>query 匹配</p>\n<ul>\n<li>\n<p>这个是根据你的uri中的查询参数来进行匹配，比如 /test?a=1&amp;&amp;b=2 ，那么可以选择该匹配方式。</p>\n</li>\n<li>\n<p>上述就可以新增一个条件，选取 query方式  , a   =  1  。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>ip匹配</p>\n<ul>\n<li>\n<p>这个是根据 http调用方的 ip来进行匹配。</p>\n</li>\n<li>\n<p>尤其是在waf插件里面，如果发现一个ip地址有攻击，可以新增一条匹配条件，填上该ip，拒绝该ip的访问。</p>\n</li>\n<li>\n<p>如果在soul前面使用了nginx代理，为了获取正确的ip，你可能要参考 <a href=\"dev-iphost.md\">dev-iphost</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>host匹配</p>\n<ul>\n<li>\n<p>这个是根据 http调用方的host来进行匹配。</p>\n</li>\n<li>\n<p>尤其是在waf插件里面，如果发现一个host地址有攻击，可以新增一条匹配条件，填上该host，拒绝该host的访问。</p>\n</li>\n<li>\n<p>如果在soul前面使用了nginx代理，为了获取正确的host，你可能要参考 <a href=\"dev-iphost.md\">dev-iphost</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>post匹配</p>\n<ul>\n<li>不推荐使用。</li>\n</ul>\n</li>\n</ul>\n",
  "link": "/zh-cn/docs/soul/selector.html",
  "meta": {
    "title": "选择器规则详解",
    "keywords": "soul",
    "description": "选择器规则详解"
  }
}
{
  "filename": "dev-iphost.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>本文是说明，如果网关前面有一层<code>nginx</code> 的时候，如何获取正确的ip与端口。</p>\n</li>\n<li>\n<p>获取正确的之后，在插件以及选择器中，可以根据 ip，与host来进行匹配。</p>\n</li>\n</ul>\n<h2>默认实现</h2>\n<ul>\n<li>\n<p>在soul网关自带实现为:<code>org.dromara.soul.web.forwarde.ForwardedRemoteAddressResolver</code>。</p>\n</li>\n<li>\n<p>它需要你在 <code>nginx</code> 设置 <code>X-Forwarded-For</code>,以便来或者正确的 ip 与 host。</p>\n</li>\n</ul>\n<h2>扩展实现</h2>\n<ul>\n<li>新增一个类A，实现<code>org.dromara.soul.plugin.api.RemoteAddressResolver</code></li>\n</ul>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RemoteAddressResolver</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * Resolve inet socket address.\n     *\n     * <span class=\"hljs-doctag\">@param</span> exchange the exchange\n     * <span class=\"hljs-doctag\">@return</span> the inet socket address\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">default</span> InetSocketAddress <span class=\"hljs-title\">resolve</span><span class=\"hljs-params\">(ServerWebExchange exchange)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> exchange.getRequest().getRemoteAddress();\n    }\n\n}\n</code></pre>\n<ul>\n<li>把你新增的实现类注册成为spring的bean,如下</li>\n</ul>\n<pre><code class=\"language-java\">   <span class=\"hljs-meta\">@Bean</span>\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> SignService <span class=\"hljs-title\">a</span><span class=\"hljs-params\">()</span> </span>{\n         <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> A\n   }\n</code></pre>\n",
  "link": "\\zh-cn\\docs\\soul\\dev-iphost.html",
  "meta": {
    "title": "正确获取Ip与host",
    "keywords": "soul",
    "description": "正确获取Ip与host"
  }
}
{
  "filename": "dev-dataSync.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>本文是说明,如何设置不同的数据同步策略。</p>\n</li>\n<li>\n<p>不同数据同步策略，需要注意什么问题。</p>\n</li>\n</ul>\n<h2>zookeeper方式同步</h2>\n<h3>配置 soul-admin</h3>\n<ul>\n<li>在 <code>soul-admin</code> 中的yml文件中做如下更改 （配置zookeeper）。</li>\n</ul>\n<pre><code>soul:\n   sync:\n     strategy: zookeeper\n     zookeeper:\n      url: localhost:2181   # 配置你的zk地址，多个zk节点，逗号隔开\n      sessionTimeout: 5000  # 配置sessionTimeout\n      connectionTimeout: 2000 # connectionTimeout\n</code></pre>\n<ul>\n<li>\n<p>或者通过spring的方式： <code>--soul.sync.strategy=zookeeper --soul.sync.zookeeper.url=你的地址 --soul.sync.zookeeper.sessionTimeout=5000 --soul.sync.zookeeper.connectionTimeout=2000</code></p>\n</li>\n<li>\n<p>重启或者启动  <code>soul-admin</code>。</p>\n</li>\n</ul>\n<h3>配置 soul-bootstrap</h3>\n<ul>\n<li>在 <code>soul-bootstrap</code> 中的yml文件中做如下更改。</li>\n</ul>\n<pre><code>soul:\n   sync:\n     strategy: zookeeper\n     zookeeper:\n      url: localhost:2181   # 配置你的zk地址\n      sessionTimeout: 5000  # 配置sessionTimeout\n      connectionTimeout: 2000 # connectionTimeout\n</code></pre>\n<ul>\n<li>\n<p>或者通过spring的方式： <code>--soul.sync.strategy=zookeeper --soul.sync.zookeeper.url=你的地址 --soul.sync.zookeeper.sessionTimeout=5000 --soul.sync.zookeeper.connectionTimeout=2000</code></p>\n</li>\n<li>\n<p>重启或者启动  <code>soul-bootstrap</code>。</p>\n</li>\n</ul>\n<h3>zookeeper方式总结</h3>\n<ul>\n<li>\n<p>我们知道zookeeper是AP模式，在极端情况下会造成数据不一致，这时候，如果重启恢复好，可以在 <code>soul-admin</code> 后台进行全量同步一次。</p>\n</li>\n<li>\n<p>依赖zookeeper ，用户必须要有。</p>\n</li>\n<li>\n<p>时效性比较好，用户可以根据自身来进行选择。</p>\n</li>\n</ul>\n<h2>http长轮询</h2>\n<h3>配置 soul-admin</h3>\n<ul>\n<li>在 <code>soul-admin</code> 中的yml文件中做如下更改,设置同步策略.</li>\n</ul>\n<pre><code>soul:\n   sync:\n     strategy: http\n</code></pre>\n<ul>\n<li>\n<p>或者通过spring的方式： <code>--soul.sync.strategy=http</code></p>\n</li>\n<li>\n<p>重启或者启动  <code>soul-admin</code>。</p>\n</li>\n</ul>\n<h3>配置 soul-bootstrap</h3>\n<ul>\n<li>在 <code>soul-bootstrap</code> 中的yml文件中做如下更改。</li>\n</ul>\n<pre><code>soul :\n    sync:\n        strategy: http\n        http:\n             url : http://localhost:9095  #配置 soul-admin的 ip与端口，或者域名\n</code></pre>\n<ul>\n<li>\n<p>或者通过spring的方式： <code>--soul.sync.http=zookeeper --soul.sync.http.url= soul-admin的ip端口</code></p>\n</li>\n<li>\n<p>重启或者启动  <code>soul-bootstrap</code>。</p>\n</li>\n</ul>\n<h3>http长轮询总结</h3>\n<ul>\n<li>\n<p>http长轮询使得网关很轻量，时效性略低。</p>\n</li>\n<li>\n<p>其根据分组key来拉取，如果数据量过大，过多，会有一定的影响。 什么意思呢？就是一个组下面的一个小地方更改，会拉取整个的组数据。</p>\n</li>\n</ul>\n<h2>websocket方式 （默认方式，推荐）</h2>\n<h3>配置 soul-admin</h3>\n<ul>\n<li>在 <code>soul-admin</code> 中的yml文件中做如下更改,设置同步策略.</li>\n</ul>\n<pre><code>soul:\n   sync:\n     strategy: websocket\n</code></pre>\n<ul>\n<li>\n<p>或者通过spring的方式： <code>--soul.sync.strategy=websocket</code></p>\n</li>\n<li>\n<p>重启或者启动  <code>soul-admin</code>。</p>\n</li>\n</ul>\n<h3>配置 soul-bootstrap</h3>\n<ul>\n<li>在 <code>soul-bootstrap</code> 中的yml文件中做如下更改。</li>\n</ul>\n<pre><code>soul :\n    sync:\n        strategy: websocket\n        websocket:\n             url : ws://localhost:9095/websocket #配置 soul-admin的 ip与端口，或者域名\n</code></pre>\n<ul>\n<li>\n<p>或者通过spring的方式： <code>--soul.sync.strategy=websocket --soul.sync.websocket.url= soul-admin的ip端口</code></p>\n</li>\n<li>\n<p>重启或者启动  <code>soul-bootstrap</code>。</p>\n</li>\n</ul>\n<h2>websocket方式（推荐）</h2>\n<ul>\n<li>\n<p>当建立连接以后会全量获取一次数据，以后的数据都是增量的更新与新增，性能好</p>\n</li>\n<li>\n<p>支持断线重连 （默认30秒）</p>\n</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\dev-dataSync.html",
  "meta": {
    "title": "设置数据同步策略",
    "keywords": "soul",
    "description": "设置数据同步策略"
  }
}
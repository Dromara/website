{
  "filename": "user-http.md",
  "__html": "<h2>说明</h2>\n<ul>\n<li>\n<p>本文旨在帮助http用户。</p>\n</li>\n<li>\n<p>soul网关使用 divide 插件来处理http请求。请求在soul-admin后台开启它。</p>\n</li>\n<li>\n<p>接入前，请正确的启动 <code>soul-admin</code> , 以及 <a href=\"setup.md\">搭建环境</a> OK。</p>\n</li>\n</ul>\n<h2>引入网关对http的代理插件</h2>\n<ul>\n<li>在网关的 <code>pom.xml</code> 文件中增加如下依赖：</li>\n</ul>\n<pre><code class=\"language-xml\">  <span class=\"hljs-comment\">&lt;!--if you use http proxy start this--&gt;</span>\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-divide<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-httpclient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>当然是要重新启动网关。</li>\n</ul>\n<h2>Http请求接入网关（springMvc体系用户）</h2>\n<ul>\n<li>首先要确保在 <code>soul-admin</code> 后台 divide插件是否开启。</li>\n</ul>\n<h5>Soul-Client接入方式。 （此方式针对SpringMvc,SpringBoot用户）</h5>\n<ul>\n<li>\n<p>SpringBoot用户</p>\n<ul>\n<li>在你的真实服务的 <code>pom.xml</code> 新增如下依赖:</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-client-springmvc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在yml中新增如下配置 ：</li>\n</ul>\n<pre><code class=\"language-yaml\">   <span class=\"hljs-attr\">soul:</span>\n     <span class=\"hljs-attr\">http:</span>\n       <span class=\"hljs-attr\">adminUrl:</span> <span class=\"hljs-string\">http://localhost:9095</span>\n       <span class=\"hljs-attr\">port:</span> <span class=\"hljs-string\">你本项目的启动端口</span>\n       <span class=\"hljs-attr\">contextPath:</span> <span class=\"hljs-string\">/http</span>\n       <span class=\"hljs-attr\">appName:</span> <span class=\"hljs-string\">http</span>\n       <span class=\"hljs-attr\">full:</span> <span class=\"hljs-literal\">false</span>  \n   <span class=\"hljs-comment\"># adminUrl: 为你启动的soul-admin 项目的ip + 端口，注意要加http://</span>\n   <span class=\"hljs-comment\"># port: 你本项目的启动端口</span>\n   <span class=\"hljs-comment\"># contextPath: 为你的这个mvc项目在soul网关的路由前缀，这个你应该懂意思把？ 比如/order ，/product 等等，网关会根据你的这个前缀来进行路由.</span>\n   <span class=\"hljs-comment\"># appName：你的应用名称，不配置的话，会默认取 `spring.application.name` 的值</span>\n   <span class=\"hljs-comment\"># full: 设置true 代表代理你的整个服务，false表示代理你其中某几个controller</span>\n</code></pre>\n<ul>\n<li>SpringMvc用户\n<ul>\n<li>在你的真实服务的 <code>pom.xml</code> 新增如下依赖:</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-xml\">       <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-client-springmvc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n       <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在你的 bean定义的xml文件中新增如下 ：</li>\n</ul>\n<pre><code class=\"language-xml\">   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span> =<span class=\"hljs-string\">\"springMvcClientBeanPostProcessor\"</span> ,<span class=\"hljs-attr\">class</span> =<span class=\"hljs-string\">\"org.dromara.soul.client.springmvc.init.SpringMvcClientBeanPostProcessor\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">constructor-arg</span>  <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"soulSpringMvcConfig\"</span>/&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n   \n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"soulSpringMvcConfig\"</span>, <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.dromara.soul.client.springmvc.config.SoulSpringMvcConfig\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"adminUrl\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"http://localhost:9095\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"port\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"你的端口\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"contextPath\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"/你的contextPath\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"appName\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"你的名字\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"full\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"false\"</span>/&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n</code></pre>\n<ul>\n<li>\n<p>在你的 <code>controller</code> 的接口上加上 <code>@SoulSpringMvcClient</code> 注解。</p>\n<ul>\n<li>\n<p>你可以把注解加到 <code>Controller</code> 类上面, 里面的path属性则为前缀，如果含有 <code>/**</code> 代表你的整个接口需要被网关代理。</p>\n</li>\n<li>\n<p>举列子 （1）： 代表 <code>/test/payment</code>, <code>/test/findByUserId</code> 都会被网关代理。</p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/test\"</span>)\n <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/test/**\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HttpTestController</span> </span>{\n     \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/payment\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">post</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> UserDTO userDTO)</span> </span>{\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }\n  \n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findByUserId\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> UserDTO <span class=\"hljs-title\">findByUserId</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"userId\"</span>)</span> <span class=\"hljs-keyword\">final</span> String userId) </span>{\n         UserDTO userDTO = <span class=\"hljs-keyword\">new</span> UserDTO();\n         userDTO.setUserId(userId);\n         userDTO.setUserName(<span class=\"hljs-string\">\"hello world\"</span>);\n         <span class=\"hljs-keyword\">return</span> userDTO;\n     }      \n  }\n</code></pre>\n<ul>\n<li>举列子 （2）： 代表 <code>/order/save</code>,会被网关代理,而<code>/order/findById</code> 则不会。</li>\n</ul>\n<pre><code class=\"language-java\"> <span class=\"hljs-meta\">@RestController</span>\n <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/order\"</span>)\n <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">OrderController</span> </span>{\n \n     <span class=\"hljs-meta\">@PostMapping</span>(<span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-meta\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/save\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(@RequestBody <span class=\"hljs-keyword\">final</span> OrderDTO orderDTO)</span> </span>{\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world save order\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n\n     <span class=\"hljs-meta\">@GetMapping</span>(<span class=\"hljs-string\">\"/findById\"</span>)\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> OrderDTO <span class=\"hljs-title\">findById</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"id\"</span>)</span> <span class=\"hljs-keyword\">final</span> String id) </span>{\n         OrderDTO orderDTO = <span class=\"hljs-keyword\">new</span> OrderDTO();\n         orderDTO.setId(id);\n         orderDTO.setName(<span class=\"hljs-string\">\"hello world findById\"</span>);\n         <span class=\"hljs-keyword\">return</span> orderDTO;\n     }\n }\n</code></pre>\n<ul>\n<li>启动你的项目，你的接口接入到了网关。</li>\n</ul>\n<h2>Http请求接入网关（其他语言，非springMvc体系）</h2>\n<ul>\n<li>\n<p>首先在 <code>soul-admin</code> 找到 divide插件，进行选择器，和规则的添加，进行流量的匹配筛选。</p>\n</li>\n<li>\n<p>如果不懂怎么配置，请看选择，规则介绍 <a href=\"selector.md\">选择器规则介绍</a>。</p>\n</li>\n<li>\n<p>您也可以自定义开发属于你的 http-client，参考 <a href=\"dev-client.md\">多语言Http客户端开发</a>。</p>\n</li>\n</ul>\n<h2>用户请求</h2>\n<ul>\n<li>\n<p>说白了，你之前怎么请求就怎么请求，没有很大的变动，变动的地方有2点。</p>\n</li>\n<li>\n<p>第一点，你之前请求的域名是你自己的服务，现在要换成网关的域名 （这个你听的懂？）</p>\n</li>\n<li>\n<p>第二点，soul网关需要有一个路由前缀，这个路由前缀就是你接入项目进行配置 <code>contextPath</code> ,如果熟的话，可以自由在 <code>soul-admin</code> 中的divide插件进行自由更改.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\">\n<span class=\"hljs-comment\"># 比如你有一个 order服务 它有一个接口，请求路径 http://localhost:8080/test/save</span>\n\n<span class=\"hljs-comment\"># 现在就需要换成：http://localhost:9195/order/test/save</span>\n\n<span class=\"hljs-comment\"># 其中 localhost:9195 为网关的ip端口，默认端口是9195 ，/order 是你接入网关配置的 contextPath</span>\n\n<span class=\"hljs-comment\"># 其他参数，请求方式不变。</span>\n\n<span class=\"hljs-comment\"># 我讲到这里还不懂？ 请加群问吧</span>\n\n</code></pre>\n<ul>\n<li>然后你就可以进行访问了，如此的方便与简单。</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\soul\\user-http.html",
  "meta": {
    "title": "http用户",
    "keywords": "soul",
    "description": "http用户"
  }
}
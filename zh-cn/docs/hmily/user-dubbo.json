{
  "filename": "user-dubbo.md",
  "__html": "<h1>Dubbo接口部分</h1>\n<ul>\n<li>在你的接口项目中引入jar包。</li>\n</ul>\n<pre><code class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hmily-annotation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>{last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在需要进行Hmily分布式事务的接口方法上加上 <code>@Hmily</code> 标识。</li>\n</ul>\n<h1>Dubbo实现项目引入依赖jar包与配置</h1>\n<h2>引入 hmily配置</h2>\n<ul>\n<li>\n<p>在项目的 <code>resource</code> 添加文件名为:<code>hmily.yml</code>配置文件</p>\n</li>\n<li>\n<p>具体的参数配置可以参考<a href=\"config.md\">配置详解</a>,<a href=\"config-local.md\">本地配置模式</a>, <a href=\"config-zookeeper.md\">zookeeper配置模式</a>, <a href=\"config-nacos.md\">nacos配置模式</a>,<a href=\"config-apollo.md\">apollo配置模式</a></p>\n</li>\n</ul>\n<h3>Spring-Namespace</h3>\n<ul>\n<li>Alibaba-Dubbo 用户引入</li>\n</ul>\n<pre><code class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hmily-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>{last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>Aapche-Dubbo 用户引入</li>\n</ul>\n<pre><code class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hmily-apache-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>{last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>在xml中进行如下配置</li>\n</ul>\n<pre><code class=\"language-xml\">    <span class=\"hljs-comment\">&lt;!--配置扫码hmily框架的包--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">context:component-scan</span> <span class=\"hljs-attr\">base-package</span>=<span class=\"hljs-string\">\"org.dromara.hmily.*\"</span>/&gt;</span>\n    <span class=\"hljs-comment\">&lt;!--设置开启aspectj-autoproxy--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">aop:aspectj-autoproxy</span> <span class=\"hljs-attr\">expose-proxy</span>=<span class=\"hljs-string\">\"true\"</span>/&gt;</span>\n    <span class=\"hljs-comment\">&lt;!--配置Hmily启动的bean参数--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"hmilyApplicationContextAware\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.dromara.hmily.spring.HmilyApplicationContextAware\"</span>/&gt;</span>\n\n</code></pre>\n<ul>\n<li>具体的参数配置可以参考<a href=\"config.md\">配置详解</a></li>\n</ul>\n<h3>Spring-Boot</h3>\n<ul>\n<li>Alibaba-Dubbo 用户引入</li>\n</ul>\n<pre><code class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hmily-spring-boot-starter-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>{last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ul>\n<li>Aapche-Dubbo 用户引入</li>\n</ul>\n<pre><code class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hmily-spring-boot-starter-apache-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>{last.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h1>Dubbo实现项目使用</h1>\n<p>在上述中，我们已经完成了集成，与配置，现在我们来详解说一下如何进行使用。</p>\n<h3>TCC模式</h3>\n<ul>\n<li>\n<p>在添加<code>@HmilyTCC</code> 标识 接口方法的具体实现上 加上<code>@HmilyTCC(confirmMethod = &quot;confirm&quot;, cancelMethod = &quot;cancel&quot;)</code></p>\n</li>\n<li>\n<p><code>confirmMethod</code> : 注解标识方法的，确认方法名称，该方法参数列表与返回类型应与标识方法一致。</p>\n</li>\n<li>\n<p><code>cancelMethod</code> :  注解标识方法的，回滚方法名称，该方法参数列表与返回类型应与标识方法一致。</p>\n</li>\n</ul>\n<p>TCC模式应该保证 <code>confirm</code> 和 <code>cancel</code> 方法的幂等性，用户需要自行去开发这个2个方法，所有的事务的确认与回滚，完全由用户决定。Hmily框架只是负责来进行调用</p>\n<h3>TAC模式</h3>\n<ul>\n<li>在添加<code>@HmilyTCC</code> 标识 接口方法的具体实现上 加上<code>@HmilyTAC</code></li>\n</ul>\n<h2>重要注意事项</h2>\n<p>在调用任何RPC调用之前，必须在本地一个<code>service</code>方法上，先行添加 <code>@HmilyTCC</code> 或者 <code>@HmilyTAC</code> 注解,标识开启全局事务。</p>\n<h4>负载均衡</h4>\n<ul>\n<li>\n<p>如果服务部署了几个节点， 负载均衡算法最好使用 <code>hmily</code>, 这样 <code>try</code>, <code>confirm</code>, <code>cancel</code> 调用会落在同一个节点\n充分利用了缓存，提搞了效率。</p>\n</li>\n<li>\n<p>支持一下几种 <code>hmilyConsistentHash</code>, <code>hmilyLeastActive</code>,  <code>hmilyRandom</code>, <code>hmilyRoundRobin</code> 几种方式均是继承dubbo原生的</p>\n</li>\n</ul>\n<pre><code class=\"language-xml\">   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span>  <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"xxx\"</span>  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"xxx\"</span> <span class=\"hljs-attr\">loadbalance</span>=<span class=\"hljs-string\">\"hmilyConsistentHash\"</span>/&gt;</span>           \n</code></pre>\n<h4>设置永不重试</h4>\n<ul>\n<li>需要进行分布式事务的dubbo接口，调用放要设置为永远不重试(retries=&quot;0&quot;)</li>\n</ul>\n<pre><code class=\"language-xml\">   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span>  <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"xxx\"</span>  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"xxx\"</span> <span class=\"hljs-attr\">retries</span>=<span class=\"hljs-string\">\"0\"</span>/&gt;</span>           \n</code></pre>\n<h4>异常</h4>\n<ul>\n<li><code>try</code>, <code>confirm</code>, <code>cancel</code> 方法的所有异常不要自行<code>catch</code> 任何异常都应该抛出给 <code>Hmily</code>框架处理。</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\hmily\\user-dubbo.html",
  "meta": {
    "title": "dubbo用户指南",
    "keywords": "dubbo",
    "description": "dubbo用户指南"
  }
}